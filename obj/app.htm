<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Jun 30 17:20:15 2024
<BR><P>
<H3>Maximum Stack Usage =       1772 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
vGsmTask &rArr; ipv_recv_Handle &rArr; ipv_send_txt_ack &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6a]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">ADC_IRQHandler</a><BR>
 <LI><a href="#[3a3]">xTaskResumeAll</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[176]">xTaskIncrementTick</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6a]">ADC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[52]">BusFault_Handler</a> from gd32f4xx_it.o(i.BusFault_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[6e]">CAN0_EWMC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[6c]">CAN0_RX0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[6d]">CAN0_RX1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[6b]">CAN0_TX_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9a]">CAN1_EWMC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[98]">CAN1_RX0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[99]">CAN1_RX1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[97]">CAN1_TX_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a6]">DCI_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[63]">DMA0_Channel0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[64]">DMA0_Channel1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[65]">DMA0_Channel2_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[66]">DMA0_Channel3_IRQHandler</a> from bsp_uart.o(i.DMA0_Channel3_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[67]">DMA0_Channel4_IRQHandler</a> from bsp_uart.o(i.DMA0_Channel4_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[68]">DMA0_Channel5_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[69]">DMA0_Channel6_IRQHandler</a> from bsp_uart.o(i.DMA0_Channel6_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[87]">DMA0_Channel7_IRQHandler</a> from bsp_uart.o(i.DMA0_Channel7_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[90]">DMA1_Channel0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[91]">DMA1_Channel1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[92]">DMA1_Channel2_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[93]">DMA1_Channel3_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[94]">DMA1_Channel4_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9c]">DMA1_Channel5_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9d]">DMA1_Channel6_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9e]">DMA1_Channel7_IRQHandler</a> from bsp_uart.o(i.DMA1_Channel7_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[55]">DebugMon_Handler</a> from gd32f4xx_it.o(i.DebugMon_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[95]">ENET_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[96]">ENET_WKUP_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[88]">EXMC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[5e]">EXTI0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[80]">EXTI10_15_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[5f]">EXTI1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[60]">EXTI2_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[61]">EXTI3_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[62]">EXTI4_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[6f]">EXTI5_9_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[5c]">FMC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a8]">FPU_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[50]">HardFault_Handler</a> from gd32f4xx_it.o(i.HardFault_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[78]">I2C0_ER_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[77]">I2C0_EV_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7a]">I2C1_ER_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[79]">I2C1_EV_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a1]">I2C2_ER_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a0]">I2C2_EV_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[59]">LVD_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[51]">MemManage_Handler</a> from gd32f4xx_it.o(i.MemManage_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[4f]">NMI_Handler</a> from gd32f4xx_it.o(i.NMI_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[56]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[5d]">RCU_CTC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[81]">RTC_Alarm_IRQHandler</a> from usr_sleep.o(i.RTC_Alarm_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[5b]">RTC_WKUP_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[4e]">Reset_Handler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[89]">SDIO_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7b]">SPI0_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7c]">SPI1_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8b]">SPI2_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[54]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[57]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a9]">SystemInit</a> from system_gd32f4xx.o(i.SystemInit) referenced from startup_gd32f407.o(.text)
 <LI><a href="#[5a]">TAMPER_STAMP_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[70]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[73]">TIMER0_Channel_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[72]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[71]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[74]">TIMER1_IRQHandler</a> from bsp_timer.o(i.TIMER1_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[75]">TIMER2_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[76]">TIMER3_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8a]">TIMER4_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8e]">TIMER5_DAC_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8f]">TIMER6_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[83]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[86]">TIMER7_Channel_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[85]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[84]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a7]">TRNG_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8c]">UART3_IRQHandler</a> from bsp_uart.o(i.UART3_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[8d]">UART4_IRQHandler</a> from bsp_uart.o(i.UART4_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7d]">USART0_IRQHandler</a> from bsp_uart.o(i.USART0_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7e]">USART1_IRQHandler</a> from bsp_uart.o(i.USART1_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[7f]">USART2_IRQHandler</a> from bsp_uart.o(i.USART2_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9f]">USART5_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[9b]">USBFS_IRQHandler</a> from gd32f4xx_hw.o(i.USBFS_IRQHandler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[82]">USBFS_WKUP_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a3]">USBHS_EP1_In_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a2]">USBHS_EP1_Out_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a5]">USBHS_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[a4]">USBHS_WKUP_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[53]">UsageFault_Handler</a> from gd32f4xx_it.o(i.UsageFault_Handler) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[58]">WWDGT_IRQHandler</a> from startup_gd32f407.o(.text) referenced from startup_gd32f407.o(RESET)
 <LI><a href="#[b8]">__main</a> from __main.o(!!!main) referenced from startup_gd32f407.o(.text)
 <LI><a href="#[b1]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[ae]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[ad]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[af]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[ac]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[ab]">_sputc</a> from _sputc.o(.text) referenced 2 times from sprintf.o(.text)
 <LI><a href="#[46]">_usb_config_desc_get</a> from usbd_enum.o(i._usb_config_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[45]">_usb_dev_desc_get</a> from usbd_enum.o(i._usb_dev_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[3a]">_usb_std_clearfeature</a> from usbd_enum.o(i._usb_std_clearfeature) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[40]">_usb_std_getconfiguration</a> from usbd_enum.o(i._usb_std_getconfiguration) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[3e]">_usb_std_getdescriptor</a> from usbd_enum.o(i._usb_std_getdescriptor) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[42]">_usb_std_getinterface</a> from usbd_enum.o(i._usb_std_getinterface) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[39]">_usb_std_getstatus</a> from usbd_enum.o(i._usb_std_getstatus) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[3b]">_usb_std_reserved</a> from usbd_enum.o(i._usb_std_reserved) referenced 4 times from usbd_enum.o(.data)
 <LI><a href="#[3d]">_usb_std_setaddress</a> from usbd_enum.o(i._usb_std_setaddress) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[41]">_usb_std_setconfiguration</a> from usbd_enum.o(i._usb_std_setconfiguration) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[3f]">_usb_std_setdescriptor</a> from usbd_enum.o(i._usb_std_setdescriptor) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[3c]">_usb_std_setfeature</a> from usbd_enum.o(i._usb_std_setfeature) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[43]">_usb_std_setinterface</a> from usbd_enum.o(i._usb_std_setinterface) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[44]">_usb_std_synchframe</a> from usbd_enum.o(i._usb_std_synchframe) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[47]">_usb_str_desc_get</a> from usbd_enum.o(i._usb_str_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[49]">cdc_acm_deinit</a> from cdc_acm_core.o(i.cdc_acm_deinit) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[4c]">cdc_acm_in</a> from cdc_acm_core.o(i.cdc_acm_in) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[48]">cdc_acm_init</a> from cdc_acm_core.o(i.cdc_acm_init) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[4d]">cdc_acm_out</a> from cdc_acm_core.o(i.cdc_acm_out) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[4a]">cdc_acm_req</a> from cdc_acm_core.o(i.cdc_acm_req) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[4b]">cdc_ctlx_out</a> from cdc_acm_core.o(i.cdc_ctlx_out) referenced 2 times from cdc_acm_core.o(.data)
 <LI><a href="#[34]">handset_all_command</a> from usr_handset.o(i.handset_all_command) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[35]">handset_all_pccmd</a> from usr_atv.o(i.handset_all_pccmd) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2b]">handset_cmd_ack</a> from usr_handset.o(i.handset_cmd_ack) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[1f]">handset_cmd_apn</a> from usr_handset.o(i.handset_cmd_apn) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[33]">handset_cmd_at</a> from usr_handset.o(i.handset_cmd_at) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[23]">handset_cmd_autoata</a> from usr_handset.o(i.handset_cmd_autoata) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[30]">handset_cmd_canbaud</a> from usr_handset.o(i.handset_cmd_canbaud) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[26]">handset_cmd_debugmode</a> from usr_handset.o(i.handset_cmd_debugmode) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[1e]">handset_cmd_id</a> from usr_handset.o(i.handset_cmd_id) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[28]">handset_cmd_interval</a> from usr_handset.o(i.handset_cmd_interval) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[1d]">handset_cmd_ip1</a> from usr_handset.o(i.handset_cmd_ip1) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[1c]">handset_cmd_ip2</a> from usr_handset.o(i.handset_cmd_ip2) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[29]">handset_cmd_ip2keepalive</a> from usr_handset.o(i.handset_cmd_ip2keepalive) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2a]">handset_cmd_mileage</a> from usr_handset.o(i.handset_cmd_mileage) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[31]">handset_cmd_other</a> from usr_handset.o(i.handset_cmd_other) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[20]">handset_cmd_password</a> from usr_handset.o(i.handset_cmd_password) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[21]">handset_cmd_phone</a> from usr_handset.o(i.handset_cmd_phone) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[24]">handset_cmd_reboot</a> from usr_handset.o(i.handset_cmd_reboot) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[27]">handset_cmd_reset</a> from usr_handset.o(i.handset_cmd_reset) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[25]">handset_cmd_showparam</a> from usr_handset.o(i.handset_cmd_showparam) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2c]">handset_cmd_showrun</a> from usr_handset.o(i.handset_cmd_showrun) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2d]">handset_cmd_sn</a> from usr_handset.o(i.handset_cmd_sn) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[32]">handset_cmd_testmode</a> from usr_handset.o(i.handset_cmd_testmode) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2e]">handset_cmd_upgrade</a> from usr_handset.o(i.handset_cmd_upgrade) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[2f]">handset_cmd_version</a> from usr_handset.o(i.handset_cmd_version) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[22]">handset_cmd_vin</a> from usr_handset.o(i.handset_cmd_vin) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[37]">handset_heap_command</a> from usr_handset.o(i.handset_heap_command) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[36]">handset_restore_command</a> from usr_handset.o(i.handset_restore_command) referenced 2 times from usr_handset.o(.data)
 <LI><a href="#[b0]">isspace</a> from usr_stdlib.o(i.isspace) referenced from scanf_char.o(.text)
 <LI><a href="#[17]">modem_urc_cipopen</a> from usr_gsm.o(i.modem_urc_cipopen) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[15]">modem_urc_clip</a> from usr_gsm.o(i.modem_urc_clip) referenced 8 times from usr_gsm.o(.data)
 <LI><a href="#[14]">modem_urc_cmti</a> from usr_gsm.o(i.modem_urc_cmti) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[19]">modem_urc_ipclose</a> from usr_gsm.o(i.modem_urc_ipclose) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[18]">modem_urc_ipd</a> from usr_gsm.o(i.modem_urc_ipd) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[16]">modem_urc_netopen</a> from usr_gsm.o(i.modem_urc_netopen) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[1a]">modem_urc_qiopen</a> from usr_gsm.o(i.modem_urc_qiopen) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[1b]">modem_urc_qiurc</a> from usr_gsm.o(i.modem_urc_qiurc) referenced 2 times from usr_gsm.o(.data)
 <LI><a href="#[12]">pc_cmd_acc</a> from usr_atv.o(i.pc_cmd_acc) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[d]">pc_cmd_cgreg</a> from usr_atv.o(i.pc_cmd_cgreg) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[9]">pc_cmd_config</a> from usr_atv.o(i.pc_cmd_config) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[b]">pc_cmd_csq</a> from usr_atv.o(i.pc_cmd_csq) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[c]">pc_cmd_flash</a> from usr_atv.o(i.pc_cmd_flash) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[10]">pc_cmd_gps</a> from usr_atv.o(i.pc_cmd_gps) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[6]">pc_cmd_iccid</a> from usr_atv.o(i.pc_cmd_iccid) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[5]">pc_cmd_imei</a> from usr_atv.o(i.pc_cmd_imei) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[13]">pc_cmd_log</a> from usr_atv.o(i.pc_cmd_log) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[e]">pc_cmd_power</a> from usr_atv.o(i.pc_cmd_power) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[8]">pc_cmd_server</a> from usr_atv.o(i.pc_cmd_server) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[a]">pc_cmd_sim</a> from usr_atv.o(i.pc_cmd_sim) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[3]">pc_cmd_sn</a> from usr_atv.o(i.pc_cmd_sn) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[11]">pc_cmd_stat</a> from usr_atv.o(i.pc_cmd_stat) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[7]">pc_cmd_swver</a> from usr_atv.o(i.pc_cmd_swver) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[f]">pc_cmd_tcp</a> from usr_atv.o(i.pc_cmd_tcp) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[4]">pc_cmd_vin</a> from usr_atv.o(i.pc_cmd_vin) referenced 2 times from usr_atv.o(.data)
 <LI><a href="#[b7]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[b6]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[38]">sms_cmd_fly</a> from usr_sms.o(i.sms_cmd_fly) referenced 2 times from usr_sms.o(.data)
 <LI><a href="#[b5]">vDevTask</a> from usr_dev.o(i.vDevTask) referenced from main.o(i.main)
 <LI><a href="#[b4]">vGpsTask</a> from usr_gps.o(i.vGpsTask) referenced from main.o(i.main)
 <LI><a href="#[b3]">vGsmTask</a> from usr_gsm.o(i.vGsmTask) referenced from main.o(i.main)
 <LI><a href="#[b2]">vMainTask</a> from usr_app.o(i.vMainTask) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b8]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[bb]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[474]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[475]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[476]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[477]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[478]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[bc]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[fd]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[be]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[c0]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[c2]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[c3]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[c4]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[479]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[c6]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c8]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c9]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ca]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[cc]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[ce]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[d0]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[d1]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[d2]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[d4]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[47a]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[d6]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d8]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[da]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[dc]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[47b]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[e8]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[de]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[47c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[e0]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[47d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[47e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[47f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[480]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[e2]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[481]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[482]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e3]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[483]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[484]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[485]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[486]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[487]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[488]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[489]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[48a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[48b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[48c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[48d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[48e]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[48f]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ed]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[490]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[491]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[492]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[493]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[494]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[495]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[496]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[497]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[ba]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[498]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[e5]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e7]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[499]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[e9]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; vMainTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[49a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[11f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ec]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[49b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ee]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[54]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[459]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[458]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[56]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[49c]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[4e]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>DCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>ENET_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>USBHS_EP1_In_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>USBHS_EP1_Out_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>USBHS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[11e]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_gd32f407.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f1]"></a>sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[f3]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_vin
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_tcp
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_swver
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_stat
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sim
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_imei
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_iccid
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_gps
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_flash
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_csq
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_cgreg
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_acc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpDownQ
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetId2
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_heap_command
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_reset
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_reboot
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_phone
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_password
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_mileage
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckDevice
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_ReadSms
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_Set_Volume
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_Delete
</UL>

<P><STRONG><a name="[f5]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[f6]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[f4]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[c7]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[fa]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[cd]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[d5]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[bf]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[fb]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[fe]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiopen
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_netopen
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipclose
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_cipopen
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_checkppp
</UL>

<P><STRONG><a name="[100]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[11b]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[102]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[49d]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_localtime
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[49e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[49f]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[4a0]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Clear
</UL>

<P><STRONG><a name="[106]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[105]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpDownQ
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_txt_ack
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_location_msg2
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_request_time_msg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_serialize_location_history
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_keepalive
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_hangup
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_rfid
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_location
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[4a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[4a2]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[4a3]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4a4]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4a5]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[10a]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[f7]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f8]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[f9]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[bd]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[f2]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>

<P><STRONG><a name="[ab]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> sprintf.o(.text)
<LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[10b]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d7]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[d9]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[10c]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[cf]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[10f]"></a>_printf_longlong_oct</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[cb]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[d3]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[101]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[ff]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[ac]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[4a6]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[4a7]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[4a8]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[119]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[11a]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[db]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[dd]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[110]"></a>__vfscanf</STRONG> (Thumb, 880 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[10d]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[4a9]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4aa]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[11c]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[e1]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[118]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[112]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[eb]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[45f]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[ef]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[4ab]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4ac]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4ad]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[121]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[120]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[122]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[123]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[114]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[115]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[124]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[3d1]"></a>ASCII2GSM7bit</STRONG> (Thumb, 306 bytes, Stack size 20 bytes, usr_sms.o(i.ASCII2GSM7bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ASCII2GSM7bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[52]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_uart.o(i.DMA0_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA0_Channel3_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_uart.o(i.DMA0_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA0_Channel4_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_uart.o(i.DMA0_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA0_Channel6_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA0_Channel7_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_uart.o(i.DMA0_Channel7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA0_Channel7_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_uart.o(i.DMA1_Channel7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA1_Channel7_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[1cc]"></a>DWT_DELAY_uS</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bsp_dwt.o(i.DWT_DELAY_uS))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DWT_DELAY_uS
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>

<P><STRONG><a name="[1eb]"></a>DWT_Init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_dwt.o(i.DWT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[128]"></a>Dchar2Int</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, usr_sms.o(i.Dchar2Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dchar2Int
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValueOfChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[55]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[3ca]"></a>GSM7bit2ASCII</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, usr_sms.o(i.GSM7bit2ASCII))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GSM7bit2ASCII
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[12a]"></a>GetItemCount</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, usr_public.o(i.GetItemCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetItemCount &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
</UL>

<P><STRONG><a name="[39b]"></a>GetStringPartEx</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usr_public.o(i.GetStringPartEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetStringPartEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
</UL>

<P><STRONG><a name="[247]"></a>GpsMileagePostAdd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_mile.o(i.GpsMileagePostAdd))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
</UL>

<P><STRONG><a name="[26a]"></a>GpsValidPostAdd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_mile.o(i.GpsValidPostAdd))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
</UL>

<P><STRONG><a name="[50]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[365]"></a>HexToCompactBCD</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_public.o(i.HexToCompactBCD))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[250]"></a>Is_Digit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usr_public.o(i.Is_Digit))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_phoneLinsten
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_monitor
</UL>

<P><STRONG><a name="[51]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>MsgGsm_BlindIndex_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usr_msg.o(i.MsgGsm_BlindIndex_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MsgGsm_BlindIndex_clear &rArr; flash_blindInIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindInIndex_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_save
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_read
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearBlindIndex
</UL>

<P><STRONG><a name="[12e]"></a>MsgGsm_BlindIndex_read</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, usr_msg.o(i.MsgGsm_BlindIndex_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MsgGsm_BlindIndex_read &rArr; MsgGsm_BlindIndex_clear &rArr; flash_blindInIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_PostAdd
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Init
</UL>

<P><STRONG><a name="[132]"></a>MsgGsm_BlindIndex_save</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_BlindIndex_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MsgGsm_BlindIndex_save &rArr; MsgGsm_BlindIndex_clear &rArr; flash_blindInIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_write
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
</UL>

<P><STRONG><a name="[135]"></a>MsgGsm_BlindOutdex_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usr_msg.o(i.MsgGsm_BlindOutdex_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MsgGsm_BlindOutdex_clear &rArr; flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindOutIndex_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_save
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_read
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearBlindIndex
</UL>

<P><STRONG><a name="[137]"></a>MsgGsm_BlindOutdex_read</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, usr_msg.o(i.MsgGsm_BlindOutdex_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MsgGsm_BlindOutdex_read &rArr; MsgGsm_BlindOutdex_clear &rArr; flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_PostAdd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Init
</UL>

<P><STRONG><a name="[138]"></a>MsgGsm_BlindOutdex_save</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_BlindOutdex_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MsgGsm_BlindOutdex_save &rArr; MsgGsm_BlindOutdex_clear &rArr; flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_write
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
</UL>

<P><STRONG><a name="[13e]"></a>MsgGsm_BlindPost_clear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_msg.o(i.MsgGsm_BlindPost_clear))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearBlindIndex
</UL>

<P><STRONG><a name="[139]"></a>MsgGsm_Clear</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usr_msg.o(i.MsgGsm_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindPost_clear
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_clear
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_vin
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
</UL>

<P><STRONG><a name="[287]"></a>MsgGsm_GetFlashIn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_msg.o(i.MsgGsm_GetFlashIn))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[286]"></a>MsgGsm_GetFlashOut</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_msg.o(i.MsgGsm_GetFlashOut))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[13f]"></a>MsgGsm_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usr_msg.o(i.MsgGsm_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MsgGsm_Init &rArr; MsgGsm_BlindOutdex_read &rArr; MsgGsm_BlindOutdex_clear &rArr; flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_read
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[141]"></a>MsgGsm_InputMsg</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_InputMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = MsgGsm_InputMsg &rArr; MsgGsm_SaveFlash &rArr; MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_rfid_msg
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
</UL>

<P><STRONG><a name="[144]"></a>MsgGsm_OutputMsg</STRONG> (Thumb, 418 bytes, Stack size 272 bytes, usr_msg.o(i.MsgGsm_OutputMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = MsgGsm_OutputMsg &rArr; MsgGsm_ReadFlash &rArr; MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
</UL>

<P><STRONG><a name="[147]"></a>MsgGsm_ReadBlindData</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_ReadBlindData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MsgGsm_ReadBlindData &rArr; flash_blinddata_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_read
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
</UL>

<P><STRONG><a name="[146]"></a>MsgGsm_ReadFlash</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_ReadFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = MsgGsm_ReadFlash &rArr; MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadBlindData
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_save
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
</UL>

<P><STRONG><a name="[149]"></a>MsgGsm_SaveBlindData</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_SaveBlindData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MsgGsm_SaveBlindData &rArr; flash_blinddata_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_write
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
</UL>

<P><STRONG><a name="[143]"></a>MsgGsm_SaveFlash</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, usr_msg.o(i.MsgGsm_SaveFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = MsgGsm_SaveFlash &rArr; MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveBlindData
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_save
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_save
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
</UL>

<P><STRONG><a name="[131]"></a>Msg_PostAdd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_msg.o(i.Msg_PostAdd))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_read
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_read
</UL>

<P><STRONG><a name="[4f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[14b]"></a>OS_GetMessage</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usr_app.o(i.OS_GetMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = OS_GetMessage &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
</UL>

<P><STRONG><a name="[14c]"></a>OS_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, usr_app.o(i.OS_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reconnect_ip2
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip2
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_reset
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_monitor
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_testmode
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipclose
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_cmti
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_clip
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_VersionCheck
</UL>

<P><STRONG><a name="[14d]"></a>OS_SendMessageFromISR</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, usr_app.o(i.OS_SendMessageFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_recv
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_check
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_recv
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>

<P><STRONG><a name="[14f]"></a>OS_TaskDelayMs</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usr_app.o(i.OS_TaskDelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OS_TaskDelayMs &rArr; vTaskDelayUntil &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[152]"></a>OS_Timer_ISR</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, usr_app.o(i.OS_Timer_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OS_Timer_ISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[307]"></a>OS_Timer_Start</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, usr_app.o(i.OS_Timer_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_Timer_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center2
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[183]"></a>OS_Timer_Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_app.o(i.OS_Timer_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip2
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_close_ip2
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center2
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[13c]"></a>PRINTF</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, usr_printf_stdarg.o(i.PRINTF))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_print
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PrintVersion
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printx
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[154]"></a>Pdu2Str</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usr_sms.o(i.Pdu2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Pdu2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValueOfChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[81]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usr_sleep.o(i.RTC_Alarm_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_Alarm_IRQHandler &rArr; gpio_watchDog &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watchDog
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_clear
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[18c]"></a>RTC_GetForCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_rtc.o(i.RTC_GetForCounter))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[159]"></a>RTC_Get_Time</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, usr_rtc.o(i.RTC_Get_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Get_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
</UL>

<P><STRONG><a name="[15c]"></a>RTC_SetForCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_rtc.o(i.RTC_SetForCounter))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Time
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[15b]"></a>RTC_Set_Time</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, usr_rtc.o(i.RTC_Set_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_Set_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetForCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetSysRTC
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
</UL>

<P><STRONG><a name="[15d]"></a>RingBuffer_Clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_ring_buffer.o(i.RingBuffer_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RingBuffer_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearModBuf
</UL>

<P><STRONG><a name="[3b6]"></a>RingBuffer_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_ring_buffer.o(i.RingBuffer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RingBuffer_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_init
</UL>

<P><STRONG><a name="[15f]"></a>RingBuffer_InsertMult</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, usr_ring_buffer.o(i.RingBuffer_InsertMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RingBuffer_InsertMult &rArr; RingBuffer_IsFull
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_IsFull
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_recv
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_recv
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>

<P><STRONG><a name="[163]"></a>RingBuffer_PopMult</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, usr_ring_buffer.o(i.RingBuffer_PopMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RingBuffer_PopMult
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_IsEmpty
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getModStr
</UL>

<P><STRONG><a name="[165]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usr_flash.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_FLASH_BufferRead &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_read
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_read
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_read
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_read
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
</UL>

<P><STRONG><a name="[169]"></a>SPI_FLASH_BufferWrite</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, usr_flash.o(i.SPI_FLASH_BufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_FLASH_BufferWrite &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_FLASH_PageWrite &rArr; SPI_Flash_Wait_Busy &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
</UL>

<P><STRONG><a name="[16c]"></a>SPI_FLASH_PageWrite</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usr_flash.o(i.SPI_FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_FLASH_PageWrite &rArr; SPI_Flash_Wait_Busy &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>

<P><STRONG><a name="[16a]"></a>SPI_FLASH_SectorErase</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, usr_flash.o(i.SPI_FLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_FLASH_SectorErase &rArr; SPI_Flash_Wait_Busy &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_erase
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_backup_erase
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_write
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindOutIndex_erase
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindInIndex_erase
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>

<P><STRONG><a name="[16d]"></a>SPI_FLASH_WriteEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_flash.o(i.SPI_FLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_FLASH_WriteEnable &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[16f]"></a>SPI_Flash_ReadID</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usr_flash.o(i.SPI_Flash_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_ReadID &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_flash
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
</UL>

<P><STRONG><a name="[16e]"></a>SPI_Flash_Wait_Busy</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usr_flash.o(i.SPI_Flash_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_Wait_Busy &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[16b]"></a>SPI_Flash_Write_NoCheck</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, usr_flash.o(i.SPI_Flash_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_Flash_Write_NoCheck &rArr; SPI_FLASH_PageWrite &rArr; SPI_Flash_Wait_Busy &rArr; spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_write
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_write
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_write
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_write
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>

<P><STRONG><a name="[170]"></a>SoftWdtISR</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, usr_softdog.o(i.SoftWdtISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = SoftWdtISR &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortGetFreeHeapSize
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationTickHook
</UL>

<P><STRONG><a name="[174]"></a>Str2pdu</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usr_sms.o(i.Str2pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Str2pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValueToChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[398]"></a>String2Byte</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, usr_public.o(i.String2Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = String2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
</UL>

<P><STRONG><a name="[57]"></a>SysTick_Handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick &rArr; vApplicationTickHook &rArr; SoftWdtISR &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>SystemInit</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_timer.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TIMER1_IRQHandler &rArr; Timer_IRQHandlerCB &rArr; gpio_check &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[17b]"></a>TftpDownQ</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, usr_fota.o(i.TftpDownQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = TftpDownQ &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
</UL>

<P><STRONG><a name="[17d]"></a>TftpTarsk</STRONG> (Thumb, 914 bytes, Stack size 48 bytes, usr_fota.o(i.TftpTarsk))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = TftpTarsk &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SoftReset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUpdateFlag
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ClearFileReq
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_calc
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_write
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_erase
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetTFTPFlag
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_handle
</UL>

<P><STRONG><a name="[17a]"></a>Timer_IRQHandlerCB</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, usr_timer.o(i.Timer_IRQHandlerCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Timer_IRQHandlerCB &rArr; gpio_check &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_ISR
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watchDog
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_led_proc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_check
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetForCounter
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetForCounter
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_PowOnFedDog
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_day
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[18a]"></a>Timer_PowOnFedDog</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usr_timer.o(i.Timer_PowOnFedDog))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer_PowOnFedDog &rArr; gpio_watchDog &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[262]"></a>Toupper</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usr_public.o(i.Toupper))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_xor_check
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
</UL>

<P><STRONG><a name="[8c]"></a>UART3_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bsp_uart.o(i.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UART3_IRQHandler &rArr; dev_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_recv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>UART4_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_uart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UART4_IRQHandler &rArr; dev_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_recv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>USART0_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_uart.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USART0_IRQHandler &rArr; dev_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_recv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>USART1_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USART1_IRQHandler &rArr; gps_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_recv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>USART2_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_uart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART2_IRQHandler &rArr; modem_recv &rArr; RingBuffer_InsertMult &rArr; RingBuffer_IsFull
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>USBFS_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.USBFS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = USBFS_IRQHandler &rArr; usbd_isr &rArr; usbd_int_epout &rArr; usbd_setup_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f407.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>ValueOfChar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usr_sms.o(i.ValueOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pdu2Str
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dchar2Int
</UL>

<P><STRONG><a name="[175]"></a>ValueToChar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usr_sms.o(i.ValueToChar))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2pdu
</UL>

<P><STRONG><a name="[117]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[196]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
</UL>

<P><STRONG><a name="[1a3]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
</UL>

<P><STRONG><a name="[1a7]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
</UL>

<P><STRONG><a name="[1ae]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
</UL>

<P><STRONG><a name="[1af]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
</UL>

<P><STRONG><a name="[1a4]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1a6]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[19c]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1a5]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1a9]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[197]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1a8]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[19a]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1aa]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[19b]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[fc]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1cd]"></a>adc_calibration_enable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_calibration_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c5]"></a>adc_channel_length_config</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, gd32f4xx_adc.o(i.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1bc]"></a>adc_clock_config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c4]"></a>adc_data_alignment_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_data_alignment_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1ca]"></a>adc_dma_mode_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_dma_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c9]"></a>adc_dma_request_after_last_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_dma_request_after_last_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1cb]"></a>adc_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c8]"></a>adc_external_trigger_config</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_external_trigger_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c7]"></a>adc_external_trigger_source_config</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_external_trigger_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[201]"></a>adc_get_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_adc.o(i.adc_get_data))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_power_proc
</UL>

<P><STRONG><a name="[1ba]"></a>adc_init</STRONG> (Thumb, 376 bytes, Stack size 40 bytes, bsp_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_DELAY_uS
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_mode_init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_subperipheral_select
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sync_mode_config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_request_after_last_enable
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_clock_config
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[1c6]"></a>adc_regular_channel_config</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, gd32f4xx_adc.o(i.adc_regular_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_regular_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1ce]"></a>adc_software_trigger_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_software_trigger_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c3]"></a>adc_special_function_config</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_special_function_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1c2]"></a>adc_sync_mode_config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f4xx_adc.o(i.adc_sync_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1cf]"></a>agps_sendCmd</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, usr_gps.o(i.agps_sendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = agps_sendCmd &rArr; print1 &rArr; uart1_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print1
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
</UL>

<P><STRONG><a name="[1d1]"></a>app_GetVersion</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, main.o(i.app_GetVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = app_GetVersion &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_version
</UL>

<P><STRONG><a name="[1d4]"></a>app_PrintVersion</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(i.app_PrintVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = app_PrintVersion &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[1d5]"></a>app_otaResultReport</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, usr_sms.o(i.app_otaResultReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 964 + Unknown Stack Size
<LI>Call Chain = app_otaResultReport &rArr; sms_MsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUpdateFlag
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUpdateFlag
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_noinit_clear
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
</UL>

<P><STRONG><a name="[1da]"></a>aw_send_location_msg</STRONG> (Thumb, 58 bytes, Stack size 264 bytes, usr_aw.o(i.aw_send_location_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 996<LI>Call Chain = aw_send_location_msg &rArr; oa_serialize_location_history &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_serialize_location_history
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_location
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_gpstime
</UL>

<P><STRONG><a name="[1de]"></a>aw_send_rfid_msg</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, usr_aw.o(i.aw_send_rfid_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = aw_send_rfid_msg &rArr; aw_serialize_rfid &rArr; oa_JT_serialize_gpsrfid &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_rfid
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[1dc]"></a>aw_serialize_location</STRONG> (Thumb, 82 bytes, Stack size 296 bytes, usr_aw.o(i.aw_serialize_location))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = aw_serialize_location &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
</UL>

<P><STRONG><a name="[1df]"></a>aw_serialize_rfid</STRONG> (Thumb, 86 bytes, Stack size 296 bytes, usr_aw.o(i.aw_serialize_rfid))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = aw_serialize_rfid &rArr; oa_JT_serialize_gpsrfid &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_rfid_msg
</UL>

<P><STRONG><a name="[1e3]"></a>aw_udp_hangup</STRONG> (Thumb, 58 bytes, Stack size 136 bytes, usr_aw.o(i.aw_udp_hangup))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = aw_udp_hangup &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_login_msg
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
</UL>

<P><STRONG><a name="[1e6]"></a>aw_udp_keepalive</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, usr_aw.o(i.aw_udp_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = aw_udp_keepalive &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
</UL>

<P><STRONG><a name="[1e7]"></a>bsp_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = bsp_init &rArr; sys_Init &rArr; gps_valid_read &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_Init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[1f3]"></a>cdc_acm_data_send1</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, cdc_acm_core.o(i.cdc_acm_data_send1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendcharusb
</UL>

<P><STRONG><a name="[3d4]"></a>del_space</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, usr_sms.o(i.del_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = del_space
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[1f1]"></a>dev_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usr_dev.o(i.dev_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = dev_Init &rArr; serialoil_Init &rArr; serialoil_UartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[1fa]"></a>dev_com_recv_proc</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, usr_dev.o(i.dev_com_recv_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = dev_com_recv_proc &rArr; handset_SetSchedul &rArr; handset_ConfigSet &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
</UL>

<P><STRONG><a name="[200]"></a>dev_power_proc</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, usr_dev.o(i.dev_power_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dev_power_proc
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
</UL>

<P><STRONG><a name="[192]"></a>dev_recv</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usr_dev.o(i.dev_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dev_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessageFromISR
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[127]"></a>dma_channel_disable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel7_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[191]"></a>dma_channel_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[1c0]"></a>dma_channel_subperipheral_select</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, gd32f4xx_dma.o(i.dma_channel_subperipheral_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_channel_subperipheral_select
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[40d]"></a>dma_circulation_disable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_circulation_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_circulation_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[1c1]"></a>dma_circulation_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1be]"></a>dma_deinit</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[40e]"></a>dma_interrupt_enable</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gd32f4xx_dma.o(i.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[126]"></a>dma_interrupt_flag_clear</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel7_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[125]"></a>dma_interrupt_flag_get</STRONG> (Thumb, 516 bytes, Stack size 20 bytes, gd32f4xx_dma.o(i.dma_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dma_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel7_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[412]"></a>dma_memory_address_config</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32f4xx_dma.o(i.dma_memory_address_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_memory_address_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
</UL>

<P><STRONG><a name="[1bf]"></a>dma_single_data_mode_init</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, gd32f4xx_dma.o(i.dma_single_data_mode_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_single_data_mode_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[40c]"></a>dma_single_data_para_struct_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32f4xx_dma.o(i.dma_single_data_para_struct_init))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[190]"></a>dma_transfer_number_config</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32f4xx_dma.o(i.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[18f]"></a>dma_transfer_number_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_dma.o(i.dma_transfer_number_get))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[157]"></a>exti_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_exti.o(i.exti_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[19e]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[202]"></a>flash_Read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_Read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckbackupApp
</UL>

<P><STRONG><a name="[186]"></a>flash_Write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_Write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_restore_command
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
</UL>

<P><STRONG><a name="[12d]"></a>flash_blindInIndex_erase</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blindInIndex_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blindInIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_clear
</UL>

<P><STRONG><a name="[12f]"></a>flash_blindIndex_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blindIndex_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blindIndex_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_read
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_read
</UL>

<P><STRONG><a name="[134]"></a>flash_blindIndex_write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blindIndex_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blindIndex_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_save
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_save
</UL>

<P><STRONG><a name="[136]"></a>flash_blindOutIndex_erase</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blindOutIndex_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_clear
</UL>

<P><STRONG><a name="[148]"></a>flash_blinddata_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blinddata_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blinddata_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadBlindData
</UL>

<P><STRONG><a name="[14a]"></a>flash_blinddata_write</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usr_flash.o(i.flash_blinddata_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_blinddata_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveBlindData
</UL>

<P><STRONG><a name="[203]"></a>flash_fota_backup_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_flash.o(i.flash_fota_backup_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = flash_fota_backup_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
</UL>

<P><STRONG><a name="[181]"></a>flash_fota_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_flash.o(i.flash_fota_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = flash_fota_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
</UL>

<P><STRONG><a name="[182]"></a>flash_fota_write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_fota_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_fota_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
</UL>

<P><STRONG><a name="[204]"></a>flash_gpsvalid_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_flash.o(i.flash_gpsvalid_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = flash_gpsvalid_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[205]"></a>flash_gpsvalid_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_gpsvalid_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_gpsvalid_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
</UL>

<P><STRONG><a name="[206]"></a>flash_gpsvalid_write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_gpsvalid_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_gpsvalid_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
</UL>

<P><STRONG><a name="[207]"></a>flash_mileage_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_flash.o(i.flash_mileage_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = flash_mileage_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[208]"></a>flash_mileage_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_mileage_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_mileage_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
</UL>

<P><STRONG><a name="[209]"></a>flash_mileage_write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usr_flash.o(i.flash_mileage_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = flash_mileage_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
</UL>

<P><STRONG><a name="[20a]"></a>fmc_byte_program</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gd32f4xx_fmc.o(i.fmc_byte_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fmc_byte_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[210]"></a>fmc_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_fmc.o(i.fmc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[212]"></a>fmc_lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f4xx_fmc.o(i.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[3ff]"></a>fmc_read_data</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_iap.o(i.fmc_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
</UL>

<P><STRONG><a name="[20b]"></a>fmc_ready_wait</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32f4xx_fmc.o(i.fmc_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_sector_erase
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_byte_program
</UL>

<P><STRONG><a name="[20d]"></a>fmc_sector_erase</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, gd32f4xx_fmc.o(i.fmc_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_sector_erase &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[211]"></a>fmc_sector_get</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, bsp_iap.o(i.fmc_sector_get))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[20c]"></a>fmc_state_get</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gd32f4xx_fmc.o(i.fmc_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>

<P><STRONG><a name="[20f]"></a>fmc_unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f4xx_fmc.o(i.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
</UL>

<P><STRONG><a name="[20e]"></a>fmc_write_data</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bsp_iap.o(i.fmc_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_sector_erase
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_byte_program
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_sector_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
</UL>

<P><STRONG><a name="[2ea]"></a>fwdgt_config</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, gd32f4xx_fwdgt.o(i.fwdgt_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fwdgt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
</UL>

<P><STRONG><a name="[2e7]"></a>fwdgt_counter_reload</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_fwdgt.o(i.fwdgt_counter_reload))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_feed
</UL>

<P><STRONG><a name="[2eb]"></a>fwdgt_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_fwdgt.o(i.fwdgt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
</UL>

<P><STRONG><a name="[1ea]"></a>gpioInit</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, usr_gpio.o(i.gpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gpioInit &rArr; gpio_dir &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[215]"></a>gpio_232_powerCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_232_powerCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_232_powerCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_PowerOn
</UL>

<P><STRONG><a name="[216]"></a>gpio_Gps_powerCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_Gps_powerCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_Gps_powerCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOn
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOff
</UL>

<P><STRONG><a name="[217]"></a>gpio_Gsm_powerCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_Gsm_powerCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_Gsm_powerCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_powerOn
</UL>

<P><STRONG><a name="[218]"></a>gpio_ReadPinStatus</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_ReadPinStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_ReadPinStatus &rArr; gpio_valo
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_valo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_val
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_check
</UL>

<P><STRONG><a name="[3da]"></a>gpio_af_set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_gpio_config
</UL>

<P><STRONG><a name="[166]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[168]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[21b]"></a>gpio_btLedCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_btLedCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_btLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_btLed_proc
</UL>

<P><STRONG><a name="[21c]"></a>gpio_btLed_proc</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_btLed_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_btLed_proc &rArr; gpio_btLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_btLedCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_led_proc
</UL>

<P><STRONG><a name="[189]"></a>gpio_check</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gpio_check &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessageFromISR
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ReadPinStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[213]"></a>gpio_dir</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bsp_gpio.o(i.gpio_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_dir &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOff
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
</UL>

<P><STRONG><a name="[21e]"></a>gpio_gpsLedCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_gpsLedCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_gpsLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_gpsLed_proc
</UL>

<P><STRONG><a name="[21f]"></a>gpio_gpsLed_proc</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_gpsLed_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_gpsLed_proc &rArr; gpio_gpsLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_gpsLedCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_led_proc
</UL>

<P><STRONG><a name="[221]"></a>gpio_handle</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usr_gpio.o(i.gpio_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gpio_handle &rArr; sys_state_sos9 &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do39
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do29
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do19
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di39
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di29
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di19
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[22d]"></a>gpio_input_bit_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_val
</UL>

<P><STRONG><a name="[18b]"></a>gpio_led_proc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_led_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpio_led_proc &rArr; gpio_modemLed_proc &rArr; gpio_modemLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLed_proc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_gpsLed_proc
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_btLed_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[1bd]"></a>gpio_mode_set</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_gpio_config
</UL>

<P><STRONG><a name="[22b]"></a>gpio_modemLedCtrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_modemLedCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_modemLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLed_proc
</UL>

<P><STRONG><a name="[22a]"></a>gpio_modemLed_proc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_modemLed_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_modemLed_proc &rArr; gpio_modemLedCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCgreg
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLedCtrl
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_led_proc
</UL>

<P><STRONG><a name="[22e]"></a>gpio_output_bit_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_output_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_valo
</UL>

<P><STRONG><a name="[21d]"></a>gpio_output_options_set</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_gpio_config
</UL>

<P><STRONG><a name="[214]"></a>gpio_set</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, bsp_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOff
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watchDog
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLedCtrl
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_gpsLedCtrl
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_btLedCtrl
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gsm_powerCtrl
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gps_powerCtrl
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_232_powerCtrl
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
</UL>

<P><STRONG><a name="[219]"></a>gpio_val</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_gpio.o(i.gpio_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_val
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ReadPinStatus
</UL>

<P><STRONG><a name="[21a]"></a>gpio_valo</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_gpio.o(i.gpio_valo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_valo
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ReadPinStatus
</UL>

<P><STRONG><a name="[158]"></a>gpio_watchDog</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usr_gpio.o(i.gpio_watchDog))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_watchDog &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_feed
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_PowOnFedDog
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[452]"></a>gps_AlarmHandle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usr_gps.o(i.gps_AlarmHandle))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[230]"></a>gps_Calc_Place</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, usr_mile.o(i.gps_Calc_Place))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = gps_Calc_Place &rArr; gps_Distance &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_MakePoint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
</UL>

<P><STRONG><a name="[232]"></a>gps_Distance</STRONG> (Thumb, 462 bytes, Stack size 152 bytes, usr_mile.o(i.gps_Distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = gps_Distance &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Calc_Place
</UL>

<P><STRONG><a name="[2c0]"></a>gps_GetGprmc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gps.o(i.gps_GetGprmc))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_interval
</UL>

<P><STRONG><a name="[364]"></a>gps_GetGpsAltitude</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gps.o(i.gps_GetGpsAltitude))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[2e4]"></a>gps_GetGpsInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gps.o(i.gps_GetGpsInfo))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[277]"></a>gps_GetGpsStarNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gps.o(i.gps_GetGpsStarNum))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_stat
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[234]"></a>gps_GetGpsTime</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usr_gps.o(i.gps_GetGpsTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gps_GetGpsTime &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[1f2]"></a>gps_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usr_gps.o(i.gps_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = gps_Init &rArr; gps_powerOn &rArr; gps_uartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[231]"></a>gps_MakePoint</STRONG> (Thumb, 984 bytes, Stack size 152 bytes, usr_mile.o(i.gps_MakePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gps_MakePoint &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Calc_Place
</UL>

<P><STRONG><a name="[236]"></a>gps_check_head</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, usr_gps.o(i.gps_check_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gps_check_head &rArr; strstr_t &rArr; strncmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
</UL>

<P><STRONG><a name="[238]"></a>gps_date_utc_to_rtc</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, usr_gps.o(i.gps_date_utc_to_rtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gps_date_utc_to_rtc &rArr; rtt_localtime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTimeType
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_mktime
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[23c]"></a>gps_filter_speed</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usr_gps.o(i.gps_filter_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gps_filter_speed &rArr; myatof &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[23f]"></a>gps_mileage_calc</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, usr_mile.o(i.gps_mileage_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = gps_mileage_calc &rArr; gps_Calc_Place &rArr; gps_Distance &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpslastloc
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLastGpsData
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_AddMileAge
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Calc_Place
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetageNum
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[246]"></a>gps_mileage_read</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, usr_mile.o(i.gps_mileage_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gps_mileage_read &rArr; flash_mileage_read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_read
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetMileAge
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMileagePostAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[245]"></a>gps_mileage_save</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usr_mile.o(i.gps_mileage_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gps_mileage_save &rArr; flash_mileage_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_write
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetMileAge
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carMillage
</UL>

<P><STRONG><a name="[24a]"></a>gps_module_errCheck</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, usr_gps.o(i.gps_module_errCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gps_module_errCheck &rArr; sys_state_gpsloc &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newAlarm
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clear_lastGpsA
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[25a]"></a>gps_nmea_char_token</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_gps.o(i.gps_nmea_char_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gps_nmea_char_token
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[24f]"></a>gps_nmea_date_token</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, usr_gps.o(i.gps_nmea_date_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gps_nmea_date_token &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Digit
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[252]"></a>gps_nmea_parse</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, usr_gps.o(i.gps_nmea_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = gps_nmea_parse &rArr; gps_nmea_parse_gprmc &rArr; gps_mileage_calc &rArr; gps_Calc_Place &rArr; gps_Distance &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_check_head
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[253]"></a>gps_nmea_parse_gpgga</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, usr_gps.o(i.gps_nmea_parse_gpgga))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gps_nmea_parse_gpgga &rArr; gps_nmea_string_token &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_xor_check
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_string_token
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_skip_token
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
</UL>

<P><STRONG><a name="[254]"></a>gps_nmea_parse_gprmc</STRONG> (Thumb, 960 bytes, Stack size 144 bytes, usr_gps.o(i.gps_nmea_parse_gprmc))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gps_nmea_parse_gprmc &rArr; gps_mileage_calc &rArr; gps_Calc_Place &rArr; gps_Distance &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_lastGpsA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpslastloc
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLastGpsData
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTimeZone
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_save_validPoint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_reset
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_xor_check
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_string_token
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_char_token
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_filter_speed
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_date_utc_to_rtc
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetSysRTC
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offAlarm
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Digit
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
</UL>

<P><STRONG><a name="[256]"></a>gps_nmea_skip_token</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usr_gps.o(i.gps_nmea_skip_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gps_nmea_skip_token
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
</UL>

<P><STRONG><a name="[257]"></a>gps_nmea_string_token</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, usr_gps.o(i.gps_nmea_string_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gps_nmea_string_token &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
</UL>

<P><STRONG><a name="[259]"></a>gps_nmea_time_token</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, usr_gps.o(i.gps_nmea_time_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gps_nmea_time_token &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Digit
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[255]"></a>gps_nmea_xor_check</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, usr_gps.o(i.gps_nmea_xor_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gps_nmea_xor_check
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Toupper
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
</UL>

<P><STRONG><a name="[263]"></a>gps_powerOff</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usr_gps.o(i.gps_powerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gps_powerOff &rArr; gpio_dir &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gps_powerCtrl
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[235]"></a>gps_powerOn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_gps.o(i.gps_powerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = gps_powerOn &rArr; gps_uartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uartInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gps_powerCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Init
</UL>

<P><STRONG><a name="[193]"></a>gps_recv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usr_gps.o(i.gps_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gps_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessageFromISR
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[24e]"></a>gps_reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usr_gps.o(i.gps_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gps_reset &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
</UL>

<P><STRONG><a name="[25f]"></a>gps_save_validPoint</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_mile.o(i.gps_save_validPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gps_save_validPoint &rArr; gps_valid_save &rArr; flash_gpsvalid_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[265]"></a>gps_sendCmd</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usr_gps.o(i.gps_sendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gps_sendCmd &rArr; print1 &rArr; uart1_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print1
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_zkw_proc
</UL>

<P><STRONG><a name="[264]"></a>gps_uartInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_gps.o(i.gps_uartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = gps_uartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOn
</UL>

<P><STRONG><a name="[240]"></a>gps_update_location_condition</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usr_gps.o(i.gps_update_location_condition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gps_update_location_condition
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_power
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[269]"></a>gps_valid_read</STRONG> (Thumb, 310 bytes, Stack size 88 bytes, usr_mile.o(i.gps_valid_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = gps_valid_read &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_read
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsValidPostAdd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Time
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[187]"></a>gps_valid_save</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, usr_mile.o(i.gps_valid_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gps_valid_save &rArr; flash_gpsvalid_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_write
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_save_validPoint
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
</UL>

<P><STRONG><a name="[26b]"></a>gps_watch_gpstime</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, usr_gps.o(i.gps_watch_gpstime))
<BR><BR>[Stack]<UL><LI>Max Depth = 1020<LI>Call Chain = gps_watch_gpstime &rArr; aw_send_location_msg &rArr; oa_serialize_location_history &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_check_time
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
</UL>

<P><STRONG><a name="[26e]"></a>gps_watch_proc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usr_gps.o(i.gps_watch_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028<LI>Call Chain = gps_watch_proc &rArr; gps_watch_gpstime &rArr; aw_send_location_msg &rArr; oa_serialize_location_history &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_gpstime
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOnInterval
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOffInterval
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[271]"></a>gps_zkw_proc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usr_gps.o(i.gps_zkw_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gps_zkw_proc &rArr; gps_sendCmd &rArr; print1 &rArr; uart1_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
</UL>

<P><STRONG><a name="[3c9]"></a>gsmDecode7bit</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, usr_sms.o(i.gsmDecode7bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gsmDecode7bit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[3d2]"></a>gsmEncode7bit</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, usr_sms.o(i.gsmEncode7bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gsmEncode7bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[272]"></a>handset_CheckDevice</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, usr_handset.o(i.handset_CheckDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUartFunc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[274]"></a>handset_CheckParam</STRONG> (Thumb, 246 bytes, Stack size 192 bytes, usr_handset.o(i.handset_CheckParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnUser
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnPasswd
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApn
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCsq
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCgreg
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsStarNum
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_power
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOnInterval
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOffInterval
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPortBak
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkTypeBak
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetId2
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrlBak
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIpBak
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_vin
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_showparam
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip1
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_id
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_apn
</UL>

<P><STRONG><a name="[283]"></a>handset_CheckParamAll</STRONG> (Thumb, 266 bytes, Stack size 208 bytes, usr_handset.o(i.handset_CheckParamAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_CheckParamAll &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermSN
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnUser
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnPasswd
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApn
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCsq
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCgreg
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsStarNum
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_power
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOnInterval
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOffInterval
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPortBak
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkTypeBak
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetId2
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrlBak
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIpBak
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_sn
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_showparam
</UL>

<P><STRONG><a name="[285]"></a>handset_CheckRun</STRONG> (Thumb, 122 bytes, Stack size 104 bytes, usr_handset.o(i.handset_CheckRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTimeZone
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTimeType
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetRedeem
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOnInterval
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOffInterval
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCan2Baud
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCan1Baud
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAckSwitch
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_GetFlashOut
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_GetFlashIn
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckDevice
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_showrun
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2keepalive
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_interval
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_canbaud
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_autoata
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ack
</UL>

<P><STRONG><a name="[28c]"></a>handset_ConfigSet</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, usr_handset.o(i.handset_ConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = handset_ConfigSet &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
</UL>

<P><STRONG><a name="[28f]"></a>handset_SetATAParam</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usr_handset.o(i.handset_SetATAParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = handset_SetATAParam
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAutoAnswerTime
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_autoata
</UL>

<P><STRONG><a name="[291]"></a>handset_SetAccOnOffInterval</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usr_handset.o(i.handset_SetAccOnOffInterval))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = handset_SetAccOnOffInterval &rArr; strchr_t
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetWatchType
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOnInterval
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOffInterval
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_interval
</UL>

<P><STRONG><a name="[295]"></a>handset_SetApn</STRONG> (Thumb, 226 bytes, Stack size 152 bytes, usr_handset.o(i.handset_SetApn))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = handset_SetApn &rArr; sys_SetApnUser &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_apn
</UL>

<P><STRONG><a name="[299]"></a>handset_SetAuthorPhone</STRONG> (Thumb, 204 bytes, Stack size 72 bytes, usr_handset.o(i.handset_SetAuthorPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = handset_SetAuthorPhone &rArr; sys_SetAuthorPhone &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAuthorPhone
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrAuthorPhone
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_phone
</UL>

<P><STRONG><a name="[29c]"></a>handset_SetCanbaud</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, usr_handset.o(i.handset_SetCanbaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = handset_SetCanbaud &rArr; strchr_t
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCan2Baud
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCan1Baud
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_canbaud
</UL>

<P><STRONG><a name="[29f]"></a>handset_SetDevice</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, usr_handset.o(i.handset_SetDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = handset_SetDevice &rArr; serialoil_noinit_clear &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUartFunc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_noinit_clear
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
</UL>

<P><STRONG><a name="[2a3]"></a>handset_SetIP1</STRONG> (Thumb, 200 bytes, Stack size 104 bytes, usr_handset.o(i.handset_SetIP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handset_SetIP1 &rArr; sys_SetUrl &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPort
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkType
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIp
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIp
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrl
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip_address
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip1
</UL>

<P><STRONG><a name="[2ab]"></a>handset_SetIP2</STRONG> (Thumb, 200 bytes, Stack size 104 bytes, usr_handset.o(i.handset_SetIP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handset_SetIP2 &rArr; sys_SetUrlBak &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip_address
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIpBak
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrlBak
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrlBak
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPortBak
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkTypeBak
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIpBak
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2
</UL>

<P><STRONG><a name="[2b2]"></a>handset_SetId</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usr_handset.o(i.handset_SetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = handset_SetId &rArr; sys_SetCarVin &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_id
</UL>

<P><STRONG><a name="[2b4]"></a>handset_SetMileage</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_handset.o(i.handset_SetMileage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = handset_SetMileage
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetageNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_mileage
</UL>

<P><STRONG><a name="[1fd]"></a>handset_SetSchedul</STRONG> (Thumb, 130 bytes, Stack size 344 bytes, usr_handset.o(i.handset_SetSchedul))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = handset_SetSchedul &rArr; handset_ConfigSet &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
</UL>

<P><STRONG><a name="[2b7]"></a>handset_SetSn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usr_handset.o(i.handset_SetSn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = handset_SetSn &rArr; sys_SetTermSN &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTermSN
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_sn
</UL>

<P><STRONG><a name="[2b9]"></a>handset_SetUpgrade</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, usr_handset.o(i.handset_SetUpgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = handset_SetUpgrade &rArr; update_SetIp &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetPort
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetIp
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetFilename
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
</UL>

<P><STRONG><a name="[2bd]"></a>handset_SetVin</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usr_handset.o(i.handset_SetVin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = handset_SetVin &rArr; sys_SetCarVin &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_vin
</UL>

<P><STRONG><a name="[34]"></a>handset_all_command</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, usr_handset.o(i.handset_all_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = handset_all_command &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>handset_all_pccmd</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, usr_atv.o(i.handset_all_pccmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = handset_all_pccmd &rArr; strnicmp_t &rArr; strncasecmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>handset_cmd_ack</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_ack &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAckSwitch
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>handset_cmd_apn</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_apn))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_cmd_apn &rArr; handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>handset_cmd_at</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_at))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = handset_cmd_at &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>handset_cmd_autoata</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_autoata))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_autoata &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetATAParam
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>handset_cmd_canbaud</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_canbaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_canbaud &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetCanbaud
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>handset_cmd_debugmode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_handset.o(i.handset_cmd_debugmode))
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>handset_cmd_id</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_cmd_id &rArr; handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetId
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>handset_cmd_interval</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_interval))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_interval &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGprmc
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>handset_cmd_ip1</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_ip1))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_cmd_ip1 &rArr; handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>handset_cmd_ip2</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_cmd_ip2 &rArr; handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>handset_cmd_ip2keepalive</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_ip2keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_ip2keepalive &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIP2KeepAlive
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>handset_cmd_mileage</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_mileage))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = handset_cmd_mileage &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetageNum
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetMileage
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>handset_cmd_other</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_other))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_other &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_set_debugSwitch
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>handset_cmd_password</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_password))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = handset_cmd_password &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTerminalPwd
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTerminalPwd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>handset_cmd_phone</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, usr_handset.o(i.handset_cmd_phone))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = handset_cmd_phone &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAuthorPhone
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>handset_cmd_reboot</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = handset_cmd_reboot &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>handset_cmd_reset</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = handset_cmd_reset &rArr; sys_ResetFacitory &rArr; sys_ClearFlash &rArr; sys_SetDefaultSysParam &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>handset_cmd_showparam</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_showparam))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = handset_cmd_showparam &rArr; handset_CheckParamAll &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>handset_cmd_showrun</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_showrun))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = handset_cmd_showrun &rArr; handset_CheckRun &rArr; handset_CheckDevice &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>handset_cmd_sn</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = handset_cmd_sn &rArr; handset_CheckParamAll &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSn
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>handset_cmd_testmode</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, usr_handset.o(i.handset_cmd_testmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = handset_cmd_testmode &rArr; modem_CallPhone &rArr; modem_Set_Volume &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>handset_cmd_upgrade</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, usr_handset.o(i.handset_cmd_upgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = handset_cmd_upgrade &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetPort
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetIp
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetFilename
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetUpdateFlag
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetTFTPFlag
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>handset_cmd_version</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = handset_cmd_version &rArr; app_GetVersion &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>handset_cmd_vin</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usr_handset.o(i.handset_cmd_vin))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = handset_cmd_vin &rArr; handset_CheckParam &rArr; sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetVin
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>handset_heap_command</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, usr_handset.o(i.handset_heap_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = handset_heap_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortGetFreeHeapSize
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[2cf]"></a>handset_ota_waiting</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, usr_handset.o(i.handset_ota_waiting))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handset_ota_waiting &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetUpdateFlag
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetTFTPFlag
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[36]"></a>handset_restore_command</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usr_handset.o(i.handset_restore_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handset_restore_command &rArr; flash_Write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_handset.o(.data)
</UL>
<P><STRONG><a name="[3ba]"></a>int_to_unicode</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usbd_enum.o(i.int_to_unicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
</UL>

<P><STRONG><a name="[2d0]"></a>ipv_ack</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, usr_comip.o(i.ipv_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 1068 + Unknown Stack Size
<LI>Call Chain = ipv_ack &rArr; ipv_send_param_msg &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_request_time_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
</UL>

<P><STRONG><a name="[2d3]"></a>ipv_cal_timing_ack</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usr_comip.o(i.ipv_cal_timing_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ipv_cal_timing_ack &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetSysRTC
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
</UL>

<P><STRONG><a name="[2d4]"></a>ipv_latlon_to_double</STRONG> (Thumb, 150 bytes, Stack size 128 bytes, usr_comip.o(i.ipv_latlon_to_double))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ipv_latlon_to_double &rArr; myatof &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
</UL>

<P><STRONG><a name="[2d6]"></a>ipv_login_msg</STRONG> (Thumb, 252 bytes, Stack size 136 bytes, usr_comip.o(i.ipv_login_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = ipv_login_msg &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
</UL>

<P><STRONG><a name="[2da]"></a>ipv_recv_Handle</STRONG> (Thumb, 366 bytes, Stack size 424 bytes, usr_comip.o(i.ipv_recv_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748 + Unknown Stack Size
<LI>Call Chain = ipv_recv_Handle &rArr; ipv_send_txt_ack &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_txt_ack
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[2d2]"></a>ipv_request_time_msg</STRONG> (Thumb, 88 bytes, Stack size 120 bytes, usr_comip.o(i.ipv_request_time_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = ipv_request_time_msg &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
</UL>

<P><STRONG><a name="[2df]"></a>ipv_send_location_msg2</STRONG> (Thumb, 56 bytes, Stack size 136 bytes, usr_comip.o(i.ipv_send_location_msg2))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = ipv_send_location_msg2 &rArr; ipv_serialize_location &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_ip2
</UL>

<P><STRONG><a name="[2d1]"></a>ipv_send_param_msg</STRONG> (Thumb, 296 bytes, Stack size 544 bytes, usr_comip.o(i.ipv_send_param_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060 + Unknown Stack Size
<LI>Call Chain = ipv_send_param_msg &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermSN
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetGpsState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
</UL>

<P><STRONG><a name="[2dd]"></a>ipv_send_txt_ack</STRONG> (Thumb, 120 bytes, Stack size 808 bytes, usr_comip.o(i.ipv_send_txt_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = ipv_send_txt_ack &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
</UL>

<P><STRONG><a name="[2d8]"></a>ipv_serialize_general</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, usr_comip.o(i.ipv_serialize_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ipv_serialize_general &rArr; ipv_splice_seg &rArr; strcat_t &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_splice_seg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_txt_ack
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_request_time_msg
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
</UL>

<P><STRONG><a name="[2e0]"></a>ipv_serialize_location</STRONG> (Thumb, 410 bytes, Stack size 304 bytes, usr_comip.o(i.ipv_serialize_location))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = ipv_serialize_location &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_location_msg2
</UL>

<P><STRONG><a name="[2e3]"></a>ipv_serialize_pid</STRONG> (Thumb, 368 bytes, Stack size 88 bytes, usr_comip.o(i.ipv_serialize_pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ipv_serialize_pid &rArr; ipv_latlon_to_double &rArr; myatof &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLastGpsData
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
</UL>

<P><STRONG><a name="[3f2]"></a>ipv_serialnum_noinit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_comip.o(i.ipv_serialnum_noinit))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
</UL>

<P><STRONG><a name="[2e2]"></a>ipv_splice_seg</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, usr_comip.o(i.ipv_splice_seg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ipv_splice_seg &rArr; strcat_t &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_t
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_check
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_general
</UL>

<P><STRONG><a name="[2dc]"></a>ipvagps_Recv_Handle</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, usr_comip.o(i.ipvagps_Recv_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ipvagps_Recv_Handle &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
</UL>

<P><STRONG><a name="[2a4]"></a>is_ip_address</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usr_public.o(i.is_ip_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_ip_address
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
</UL>

<P><STRONG><a name="[15a]"></a>is_leap_year</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, usr_rtc.o(i.is_leap_year))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Time
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Time
</UL>

<P><STRONG><a name="[b0]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_stdlib.o(i.isspace))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[22f]"></a>iwdg_feed</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_iwdg.o(i.iwdg_feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iwdg_feed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_counter_reload
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watchDog
</UL>

<P><STRONG><a name="[1ef]"></a>iwdg_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_iwdg.o(i.iwdg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = iwdg_init &rArr; rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_enable
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_config
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[1ec]"></a>log_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usr_public.o(i.log_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = log_Init &rArr; usb_init &rArr; usbd_init &rArr; usb_basic_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[ea]"></a>main</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = main &rArr; vMainTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[343]"></a>memcmp_t</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_stdlib.o(i.memcmp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memcmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_clip
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckTerminalPwd
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_fw_check
</UL>

<P><STRONG><a name="[142]"></a>memcpy_t</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usr_stdlib.o(i.memcpy_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTermSN
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIp
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermSN
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLastGpsData
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_gpstime
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_string_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_check_head
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_save
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_splice_seg
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_txt_ack
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetIp
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetFilename
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermType
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsTime
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carLicence
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_apn
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_TLV_AWExt
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrlBak
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTerminalPwd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIpBak
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAuthorPhone
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTerminalPwd
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetImei
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCops
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_get_phone
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_data_send1
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_day
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_fw_check
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[140]"></a>memset_t</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, usr_stdlib.o(i.memset_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTermSN
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIp
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermSN
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIp
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrl
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_rfid_msg
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLastGpsData
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetIp
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetFilename
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIpBak
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrlBak
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carLicence
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_apn
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_query_filter_msg
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrlBak
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTerminalPwd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIpBak
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAuthorPhone
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAuthorPhone
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrAuthorPhone
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_noinit_clear
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetImei
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCops
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallinNo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClearCops
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AckModemInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_noinit_clear
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_get_phone
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearRuning
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckbackupApp
</UL>

<P><STRONG><a name="[2f7]"></a>modem_AckModemInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_AckModemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = modem_AckModemInit &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
</UL>

<P><STRONG><a name="[2f8]"></a>modem_AnwserPhone</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_AnwserPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = modem_AnwserPhone &rArr; modem_Set_Volume &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_Set_Volume
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetSpk
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_NoiseCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[2c8]"></a>modem_CallPhone</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usr_gsm.o(i.modem_CallPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = modem_CallPhone &rArr; modem_Set_Volume &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_Set_Volume
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetSpk
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_NoiseCtl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_monitor
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_testmode
</UL>

<P><STRONG><a name="[2fc]"></a>modem_CcidCheck</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, usr_gsm.o(i.modem_CcidCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = modem_CcidCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
</UL>

<P><STRONG><a name="[2ff]"></a>modem_CgregCheck</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_CgregCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_CgregCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCgreg
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_general_check
</UL>

<P><STRONG><a name="[301]"></a>modem_CheckInOut</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_CheckInOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = modem_CheckInOut &rArr; strchr_t
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[302]"></a>modem_ClccCheck</STRONG> (Thumb, 598 bytes, Stack size 72 bytes, usr_gsm.o(i.modem_ClccCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = modem_ClccCheck &rArr; modem_HandUpClear &rArr; modem_HangPhone &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCallCtrl
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAutoAnswerTime
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallinNo
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallState
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCallState
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CheckInOut
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[33e]"></a>modem_ClearAtErrCnt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_ClearAtErrCnt))
<BR><BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
</UL>

<P><STRONG><a name="[312]"></a>modem_ClearCallState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_ClearCallState))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
</UL>

<P><STRONG><a name="[30a]"></a>modem_ClearCops</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_ClearCops))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = modem_ClearCops &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
</UL>

<P><STRONG><a name="[30b]"></a>modem_CopsCheck</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, usr_gsm.o(i.modem_CopsCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = modem_CopsCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCops
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCops
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClearCops
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[30e]"></a>modem_CpsiCheck</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_CpsiCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_CpsiCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[30f]"></a>modem_CsqCheck</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_CsqCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = modem_CsqCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCsq
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_general_check
</UL>

<P><STRONG><a name="[351]"></a>modem_GetAckModemInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetAckModemInfo))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_CheckAckInfo
</UL>

<P><STRONG><a name="[305]"></a>modem_GetCallState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetCallState))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[1d2]"></a>modem_GetCcid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetCcid))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sim
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_iccid
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
</UL>

<P><STRONG><a name="[22c]"></a>modem_GetCgreg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetCgreg))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_cgreg
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLed_proc
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[30d]"></a>modem_GetCops</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetCops))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
</UL>

<P><STRONG><a name="[276]"></a>modem_GetCsq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetCsq))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_csq
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[1d3]"></a>modem_GetImei</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetImei))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_imei
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_splice_seg
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
</UL>

<P><STRONG><a name="[1db]"></a>modem_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reconnect_ip2
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip2
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_modemLed_proc
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_location_msg2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_logout
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[303]"></a>modem_HandUpClear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_HandUpClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_HandUpClear &rArr; modem_HangPhone &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HangPhone
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClearCallState
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[311]"></a>modem_HangPhone</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_HangPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_HangPhone &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetSpk
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
</UL>

<P><STRONG><a name="[313]"></a>modem_ImeiCheck</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_ImeiCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = modem_ImeiCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetImei
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[2f9]"></a>modem_NoiseCtl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_NoiseCtl))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_NoiseCtl &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_Set_Mic
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AnwserPhone
</UL>

<P><STRONG><a name="[316]"></a>modem_QinistatCheck</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_QinistatCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = modem_QinistatCheck &rArr; modem_CcidCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[352]"></a>modem_SetAckModem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetAckModem))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_CheckAckInfo
</UL>

<P><STRONG><a name="[306]"></a>modem_SetCallState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetCallState))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_clip
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[308]"></a>modem_SetCallinNo</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_SetCallinNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = modem_SetCallinNo &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[2fe]"></a>modem_SetCcid</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, usr_gsm.o(i.modem_SetCcid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = modem_SetCcid &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Toupper
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
</UL>

<P><STRONG><a name="[300]"></a>modem_SetCgreg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetCgreg))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
</UL>

<P><STRONG><a name="[30c]"></a>modem_SetCops</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_SetCops))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = modem_SetCops &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
</UL>

<P><STRONG><a name="[310]"></a>modem_SetCsq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetCsq))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
</UL>

<P><STRONG><a name="[314]"></a>modem_SetImei</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_SetImei))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = modem_SetImei &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
</UL>

<P><STRONG><a name="[2fa]"></a>modem_SetSpk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetSpk))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HangPhone
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AnwserPhone
</UL>

<P><STRONG><a name="[2cb]"></a>modem_SetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_SetState))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[315]"></a>modem_Set_Mic</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_Set_Mic))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_NoiseCtl
</UL>

<P><STRONG><a name="[2fb]"></a>modem_Set_Volume</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_Set_Volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = modem_Set_Volume &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AnwserPhone
</UL>

<P><STRONG><a name="[317]"></a>modem_UrcportCheck</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_UrcportCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_UrcportCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
</UL>

<P><STRONG><a name="[318]"></a>modem_VersionCheck</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_VersionCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_VersionCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[319]"></a>modem_clearAtBuf</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_clearAtBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = modem_clearAtBuf &rArr; RingBuffer_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[31a]"></a>modem_clearModBuf</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_clearModBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = modem_clearModBuf &rArr; RingBuffer_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[31b]"></a>modem_clear_flagCnt</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_clear_flagCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = modem_clear_flagCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[31e]"></a>modem_disconnect_ip2</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usr_comip.o(i.modem_disconnect_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_disconnect_ip2 &rArr; modem_gsm_close_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIP2KeepAlive
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_close_ip2
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center2
</UL>

<P><STRONG><a name="[321]"></a>modem_general_check</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_general_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = modem_general_check &rArr; modem_CsqCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
</UL>

<P><STRONG><a name="[2fd]"></a>modem_getAtBuf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_gsm.o(i.modem_getAtBuf))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_ReadSms
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_checkppp
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_VersionCheck
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
</UL>

<P><STRONG><a name="[322]"></a>modem_getAtBufLen</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_getAtBufLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = modem_getAtBufLen
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
</UL>

<P><STRONG><a name="[324]"></a>modem_getModStr</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_getModStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = modem_getModStr &rArr; RingBuffer_PopMult
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
</UL>

<P><STRONG><a name="[325]"></a>modem_gsm_Login</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_gsm_Login))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = modem_gsm_Login &rArr; aw_udp_hangup &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_hangup
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[326]"></a>modem_gsm_Login2</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, usr_comip.o(i.modem_gsm_Login2))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = modem_gsm_Login2 &rArr; ipv_login_msg &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip2
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[328]"></a>modem_gsm_center</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_gsm_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 980 + Unknown Stack Size
<LI>Call Chain = modem_gsm_center &rArr; app_otaResultReport &rArr; sms_MsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_keepalive
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_general_check
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[32a]"></a>modem_gsm_center2</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usr_comip.o(i.modem_gsm_center2))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = modem_gsm_center2 &rArr; modem_send_ip2 &rArr; ipv_send_location_msg2 &rArr; ipv_serialize_location &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_ip2
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_disconnect_ip2
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[32c]"></a>modem_gsm_cgreg</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, usr_gsm.o(i.modem_gsm_cgreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = modem_gsm_cgreg &rArr; modem_QinistatCheck &rArr; modem_CcidCheck &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCsq
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCgreg
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_UrcportCheck
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCops
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[32d]"></a>modem_gsm_checkppp</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_gsm_checkppp))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_gsm_checkppp &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[320]"></a>modem_gsm_close_ip2</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_comip.o(i.modem_gsm_close_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_gsm_close_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_disconnect_ip2
</UL>

<P><STRONG><a name="[32e]"></a>modem_gsm_disconnect</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_gsm_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_gsm_disconnect &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[2de]"></a>modem_gsm_disconnect_ip1</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_gsm_disconnect_ip1))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
</UL>

<P><STRONG><a name="[327]"></a>modem_gsm_disconnect_ip2</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usr_comip.o(i.modem_gsm_disconnect_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
</UL>

<P><STRONG><a name="[32f]"></a>modem_gsm_init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_gsm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = modem_gsm_init &rArr; modem_sendAT_init &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendAT_init
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearModBuf
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_VersionCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[332]"></a>modem_gsm_ip</STRONG> (Thumb, 594 bytes, Stack size 160 bytes, usr_gsm.o(i.modem_gsm_ip))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = modem_gsm_ip &rArr; modem_gsm_checkppp &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip1_errcheck
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_checkppp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[333]"></a>modem_gsm_ip1_errcheck</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_gsm_ip1_errcheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = modem_gsm_ip1_errcheck &rArr; modem_send_disconnect &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[334]"></a>modem_gsm_ip2_errcheck</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usr_comip.o(i.modem_gsm_ip2_errcheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = modem_gsm_ip2_errcheck &rArr; modem_send_disconnect &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
</UL>

<P><STRONG><a name="[335]"></a>modem_gsm_ipvip</STRONG> (Thumb, 240 bytes, Stack size 136 bytes, usr_comip.o(i.modem_gsm_ipvip))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = modem_gsm_ipvip &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip2_errcheck
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[336]"></a>modem_gsm_logout</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, usr_gsm.o(i.modem_gsm_logout))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = modem_gsm_logout
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[337]"></a>modem_gsm_ppp</STRONG> (Thumb, 492 bytes, Stack size 152 bytes, usr_gsm.o(i.modem_gsm_ppp))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = modem_gsm_ppp &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnUser
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnPasswd
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApn
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[339]"></a>modem_gsm_reconnect_ip1</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_gsm_reconnect_ip1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = modem_gsm_reconnect_ip1 &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[33a]"></a>modem_gsm_reconnect_ip2</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usr_comip.o(i.modem_gsm_reconnect_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = modem_gsm_reconnect_ip2 &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[33b]"></a>modem_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = modem_init &rArr; modem_uartInit &rArr; uart2_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_uartInit
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_powerOn
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearModBuf
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClearAtErrCnt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AckModemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[338]"></a>modem_paramJudge</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_paramJudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = modem_paramJudge &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApn
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrlBak
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIpBak
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
</UL>

<P><STRONG><a name="[33c]"></a>modem_powerOn</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_powerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = modem_powerOn &rArr; gpio_Gsm_powerCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gsm_powerCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
</UL>

<P><STRONG><a name="[329]"></a>modem_queue_send</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_queue_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = modem_queue_send &rArr; MsgGsm_OutputMsg &rArr; MsgGsm_ReadFlash &rArr; MsgGsm_Clear &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_query_filter_msg
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AckModemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
</UL>

<P><STRONG><a name="[340]"></a>modem_reconnect_ip2</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, usr_comip.o(i.modem_reconnect_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = modem_reconnect_ip2 &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[194]"></a>modem_recv</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, usr_gsm.o(i.modem_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = modem_recv &rArr; RingBuffer_InsertMult &rArr; RingBuffer_IsFull
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[341]"></a>modem_recv_proc</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_recv_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = modem_recv_proc &rArr; modem_response &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getModStr
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBufLen
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[330]"></a>modem_reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = modem_reset &rArr; modem_uartInit &rArr; uart2_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_Gsm_powerCtrl
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_uartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[342]"></a>modem_response</STRONG> (Thumb, 640 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = modem_response &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mystrncmp
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCallState
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
</UL>

<P><STRONG><a name="[345]"></a>modem_seek_AtAck</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_seek_AtAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
</UL>

<P><STRONG><a name="[331]"></a>modem_sendAT_init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_sendAT_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = modem_sendAT_init &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[346]"></a>modem_sendChar</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_sendChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = modem_sendChar &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
</UL>

<P><STRONG><a name="[348]"></a>modem_sendStr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_sendStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = modem_sendStr &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print2
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
</UL>

<P><STRONG><a name="[34a]"></a>modem_send_AtStr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_send_AtStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = modem_send_AtStr &rArr; modem_sendStr &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
</UL>

<P><STRONG><a name="[2bf]"></a>modem_send_Atcmd</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_send_Atcmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip2
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_close_ip2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_at
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_ReadSms
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_DelAllSms
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendAT_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_checkppp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_general_check
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_VersionCheck
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_UrcportCheck
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_Set_Volume
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_NoiseCtl
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HangPhone
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AnwserPhone
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_Delete
</UL>

<P><STRONG><a name="[184]"></a>modem_send_disconnect</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_send_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = modem_send_disconnect &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCallState
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip2_errcheck
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carLicence
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carColor
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_apn
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip1_errcheck
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[17c]"></a>modem_send_gprsData</STRONG> (Thumb, 694 bytes, Stack size 184 bytes, usr_gsm.o(i.modem_send_gprsData))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_Reconnect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetPort
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetIp
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip1
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printx
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpDownQ
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_keepalive
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_hangup
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
</UL>

<P><STRONG><a name="[2d9]"></a>modem_send_gprsData2</STRONG> (Thumb, 274 bytes, Stack size 168 bytes, usr_comip.o(i.modem_send_gprsData2))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clearAtBuf
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect_ip2
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_txt_ack
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_location_msg2
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_request_time_msg
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
</UL>

<P><STRONG><a name="[32b]"></a>modem_send_ip2</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usr_comip.o(i.modem_send_ip2))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = modem_send_ip2 &rArr; ipv_send_location_msg2 &rArr; ipv_serialize_location &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_location_msg2
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center2
</UL>

<P><STRONG><a name="[33d]"></a>modem_uartInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_gsm.o(i.modem_uartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = modem_uartInit &rArr; uart2_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reset
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
</UL>

<P><STRONG><a name="[17]"></a>modem_urc_cipopen</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_cipopen))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = modem_urc_cipopen &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>modem_urc_clip</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_clip))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = modem_urc_clip &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>modem_urc_cmti</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_cmti))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = modem_urc_cmti &rArr; OS_SendMessage &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>modem_urc_ipclose</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_ipclose))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = modem_urc_ipclose &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>modem_urc_ipd</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, usr_gsm.o(i.modem_urc_ipd))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = modem_urc_ipd &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>modem_urc_netopen</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_netopen))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = modem_urc_netopen &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>modem_urc_qiopen</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usr_gsm.o(i.modem_urc_qiopen))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = modem_urc_qiopen &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>modem_urc_qiurc</STRONG> (Thumb, 460 bytes, Stack size 24 bytes, usr_gsm.o(i.modem_urc_qiurc))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = modem_urc_qiurc &rArr; modem_send_disconnect &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_gsm.o(.data)
</UL>
<P><STRONG><a name="[23d]"></a>myatof</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, usr_public.o(i.myatof))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = myatof &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow_my
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_filter_speed
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[251]"></a>myatoi</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usr_public.o(i.myatoi))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2keepalive
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetMileage
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetCanbaud
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetATAParam
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_cmti
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
</UL>

<P><STRONG><a name="[344]"></a>mystrncmp</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, usr_public.o(i.mystrncmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mystrncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
</UL>

<P><STRONG><a name="[1e8]"></a>nvic_init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_nvic.o(i.nvic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nvic_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[34f]"></a>nvic_irq_enable</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gd32f4xx_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
</UL>

<P><STRONG><a name="[2ee]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[2ed]"></a>nvic_vector_table_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f4xx_misc.o(i.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[350]"></a>oa_JT_CheckAckInfo</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usr_aw.o(i.oa_JT_CheckAckInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oa_JT_CheckAckInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetAckModem
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetAckModemInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_ack_deal
</UL>

<P><STRONG><a name="[353]"></a>oa_JT_check_login</STRONG> (Thumb, 754 bytes, Stack size 248 bytes, usr_aw.o(i.oa_JT_check_login))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = oa_JT_check_login &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printx
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_logout_msg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[357]"></a>oa_JT_create_TLV_AWExt</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, usr_aw.o(i.oa_JT_create_TLV_AWExt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oa_JT_create_TLV_AWExt &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
</UL>

<P><STRONG><a name="[358]"></a>oa_JT_create_append_Ext</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usr_aw.o(i.oa_JT_create_append_Ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oa_JT_create_append_Ext
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[355]"></a>oa_JT_create_general_ack</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, usr_aw.o(i.oa_JT_create_general_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = oa_JT_create_general_ack &rArr; oa_JT_locate &rArr; oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
</UL>

<P><STRONG><a name="[1e5]"></a>oa_JT_create_login_msg</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, usr_aw.o(i.oa_JT_create_login_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = oa_JT_create_login_msg &rArr; oa_JT_locate &rArr; oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_change_UpSel
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_hangup
</UL>

<P><STRONG><a name="[356]"></a>oa_JT_create_logout_msg</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, usr_aw.o(i.oa_JT_create_logout_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = oa_JT_create_logout_msg &rArr; oa_JT_locate &rArr; oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
</UL>

<P><STRONG><a name="[1e4]"></a>oa_JT_create_register_msg</STRONG> (Thumb, 196 bytes, Stack size 168 bytes, usr_aw.o(i.oa_JT_create_register_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = oa_JT_create_register_msg &rArr; oa_JT_locate &rArr; oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermType
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermId
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetProvinceId
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetManuId
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCityId
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_change_UpSel
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_hangup
</UL>

<P><STRONG><a name="[354]"></a>oa_JT_deal_msg</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, usr_aw.o(i.oa_JT_deal_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = oa_JT_deal_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_check
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetId1
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
</UL>

<P><STRONG><a name="[360]"></a>oa_JT_general_msg</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, usr_aw.o(i.oa_JT_general_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_check
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetId1
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
</UL>

<P><STRONG><a name="[1e1]"></a>oa_JT_locate</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, usr_aw.o(i.oa_JT_locate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = oa_JT_locate &rArr; oa_JT_general_msg &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_change_UpSel
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_serialize_location_history
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_logout_msg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_login_msg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_udp_keepalive
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_rfid
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_location
</UL>

<P><STRONG><a name="[33f]"></a>oa_JT_query_filter_msg</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, usr_aw.o(i.oa_JT_query_filter_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = oa_JT_query_filter_msg &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xor_check
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_queue_send
</UL>

<P><STRONG><a name="[1e0]"></a>oa_JT_serialize_gps</STRONG> (Thumb, 892 bytes, Stack size 128 bytes, usr_aw.o(i.oa_JT_serialize_gps))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCsq
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsStarNum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_car
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_alarm
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetMileAge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLastGpsData
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsTime
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsInfo
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsAltitude
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexToCompactBCD
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_append_Ext
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_serialize_location_history
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_location
</UL>

<P><STRONG><a name="[1e2]"></a>oa_JT_serialize_gpsrfid</STRONG> (Thumb, 632 bytes, Stack size 128 bytes, usr_aw.o(i.oa_JT_serialize_gpsrfid))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = oa_JT_serialize_gpsrfid &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_car
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_alarm
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLastGpsData
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsTime
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsInfo
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsAltitude
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexToCompactBCD
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_serialize_rfid
</UL>

<P><STRONG><a name="[359]"></a>oa_change_UpSel</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usr_aw.o(i.oa_change_UpSel))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_login_msg
</UL>

<P><STRONG><a name="[367]"></a>oa_get_TLV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, usr_aw.o(i.oa_get_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oa_get_TLV &rArr; uint8_to_uint32
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[368]"></a>oa_get_ext_TLV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, usr_aw.o(i.oa_get_ext_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oa_get_ext_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_aw_msg
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
</UL>

<P><STRONG><a name="[369]"></a>oa_recv_Handle</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, usr_aw.o(i.oa_recv_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284 + Unknown Stack Size
<LI>Call Chain = oa_recv_Handle &rArr; oa_trac_recv_msg_handle &rArr; oa_trac_rev_post_scheduling &rArr; oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_handle
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printx
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[1dd]"></a>oa_serialize_location_history</STRONG> (Thumb, 118 bytes, Stack size 296 bytes, usr_aw.o(i.oa_serialize_location_history))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = oa_serialize_location_history &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_location_msg
</UL>

<P><STRONG><a name="[36b]"></a>oa_trac_recv_msg_handle</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, usr_aw.o(i.oa_trac_recv_msg_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252 + Unknown Stack Size
<LI>Call Chain = oa_trac_recv_msg_handle &rArr; oa_trac_rev_post_scheduling &rArr; oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_monitor
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_aw_msg
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_ack_deal
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
</UL>

<P><STRONG><a name="[376]"></a>oa_trac_rev_expend_aw_msg</STRONG> (Thumb, 148 bytes, Stack size 232 bytes, usr_aw.o(i.oa_trac_rev_expend_aw_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_expend_aw_msg &rArr; oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_get_ext_TLV
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[375]"></a>oa_trac_rev_expend_aw_version</STRONG> (Thumb, 100 bytes, Stack size 200 bytes, usr_aw.o(i.oa_trac_rev_expend_aw_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_expend_aw_version &rArr; oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetVersion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[36c]"></a>oa_trac_rev_general_ack_deal</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_general_ack_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oa_trac_rev_general_ack_deal &rArr; oa_JT_CheckAckInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clear_alarm
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_CheckAckInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[374]"></a>oa_trac_rev_general_aw_msg</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, usr_aw.o(i.oa_trac_rev_general_aw_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oa_trac_rev_general_aw_msg &rArr; oa_get_ext_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_get_ext_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[373]"></a>oa_trac_rev_monitor</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_monitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_monitor &rArr; modem_CallPhone &rArr; modem_Set_Volume &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Digit
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[36e]"></a>oa_trac_rev_para_check</STRONG> (Thumb, 1072 bytes, Stack size 296 bytes, usr_aw.o(i.oa_trac_rev_para_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 828 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_para_check &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_to_uint8
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetRestTimeOut
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetRedeem
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetProvinceId
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetOverSpeedTime
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetOverSpeed
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetMileAge
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetDriveTimeOut
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCityId
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarColor
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOnInterval
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetAccStateOffInterval
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[36d]"></a>oa_trac_rev_para_set</STRONG> (Thumb, 426 bytes, Stack size 48 bytes, usr_aw.o(i.oa_trac_rev_para_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = oa_trac_rev_para_set &rArr; oa_trac_rev_para_set_port &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_sleep_time
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_report_watch
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_redeem
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_phoneLinsten
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_phoneLim
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_move_radius
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_keepalive
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carMillage
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carLicence
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carColor
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_apn
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_get_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[380]"></a>oa_trac_rev_para_set_addr</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = oa_trac_rev_para_set_addr &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIp
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrl
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip_address
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIpBak
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrlBak
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[389]"></a>oa_trac_rev_para_set_alarm</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_alarm &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetRestTimeOut
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetOverSpeedTime
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetOverSpeed
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDriveTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[37f]"></a>oa_trac_rev_para_set_apn</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_apn))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = oa_trac_rev_para_set_apn &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[38d]"></a>oa_trac_rev_para_set_carColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usr_aw.o(i.oa_trac_rev_para_set_carColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = oa_trac_rev_para_set_carColor &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarColor
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[38b]"></a>oa_trac_rev_para_set_carID</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_carID))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = oa_trac_rev_para_set_carID &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetProvinceId
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCityId
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[38c]"></a>oa_trac_rev_para_set_carLicence</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_aw.o(i.oa_trac_rev_para_set_carLicence))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = oa_trac_rev_para_set_carLicence &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[38a]"></a>oa_trac_rev_para_set_carMillage</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_carMillage))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = oa_trac_rev_para_set_carMillage &rArr; gps_mileage_save &rArr; flash_mileage_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetMileAge
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[37e]"></a>oa_trac_rev_para_set_keepalive</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, usr_aw.o(i.oa_trac_rev_para_set_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oa_trac_rev_para_set_keepalive
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[386]"></a>oa_trac_rev_para_set_move_radius</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_move_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_move_radius &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetMoveDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[387]"></a>oa_trac_rev_para_set_phoneLim</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_phoneLim))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = oa_trac_rev_para_set_phoneLim &rArr; uint8_to_uint32
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[388]"></a>oa_trac_rev_para_set_phoneLinsten</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usr_aw.o(i.oa_trac_rev_para_set_phoneLinsten))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oa_trac_rev_para_set_phoneLinsten
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Digit
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[381]"></a>oa_trac_rev_para_set_port</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = oa_trac_rev_para_set_port &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPort
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkType
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[385]"></a>oa_trac_rev_para_set_redeem</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_redeem))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_redeem &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetRedeem
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[382]"></a>oa_trac_rev_para_set_report_watch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_report_watch))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_report_watch &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetWatchType
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[383]"></a>oa_trac_rev_para_set_sleep_time</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_sleep_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_sleep_time &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetWatchType
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOffInterval
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[384]"></a>oa_trac_rev_para_set_watInt</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, usr_aw.o(i.oa_trac_rev_para_set_watInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = oa_trac_rev_para_set_watInt &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetWatchType
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDistanceInterval
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOnInterval
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set
</UL>

<P><STRONG><a name="[372]"></a>oa_trac_rev_post_scheduling</STRONG> (Thumb, 200 bytes, Stack size 312 bytes, usr_aw.o(i.oa_trac_rev_post_scheduling))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_post_scheduling &rArr; oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_send_msg_to_platform
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[371]"></a>oa_trac_rev_rollCall</STRONG> (Thumb, 98 bytes, Stack size 192 bytes, usr_aw.o(i.oa_trac_rev_rollCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 724 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_rollCall &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[370]"></a>oa_trac_rev_ter_check</STRONG> (Thumb, 276 bytes, Stack size 168 bytes, usr_aw.o(i.oa_trac_rev_ter_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_ter_check &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_to_uint8
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermType
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermId
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetManuId
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String2Byte
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[36f]"></a>oa_trac_rev_terminal_ctrl</STRONG> (Thumb, 264 bytes, Stack size 96 bytes, usr_aw.o(i.oa_trac_rev_terminal_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = oa_trac_rev_terminal_ctrl &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_recv_msg_handle
</UL>

<P><STRONG><a name="[399]"></a>oa_trac_rev_update_init</STRONG> (Thumb, 258 bytes, Stack size 80 bytes, usr_aw.o(i.oa_trac_rev_update_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = oa_trac_rev_update_init &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetUpdateFlag
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetTFTPFlag
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetPort
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetIp
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetFilename
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetLastState
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy_t
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
</UL>

<P><STRONG><a name="[377]"></a>oa_trac_send_msg_to_platform</STRONG> (Thumb, 100 bytes, Stack size 368 bytes, usr_aw.o(i.oa_trac_send_msg_to_platform))
<BR><BR>[Stack]<UL><LI>Max Depth = 900 + Unknown Stack Size
<LI>Call Chain = oa_trac_send_msg_to_platform &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_locate
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_TLV_AWExt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
</UL>

<P><STRONG><a name="[363]"></a>parse_lat_or_lon_to_double</STRONG> (Thumb, 140 bytes, Stack size 104 bytes, usr_public.o(i.parse_lat_or_lon_to_double))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = parse_lat_or_lon_to_double &rArr; myatof &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[12]"></a>pc_cmd_acc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usr_atv.o(i.pc_cmd_acc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = pc_cmd_acc &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_acc
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>pc_cmd_cgreg</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_cgreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_cgreg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCgreg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>pc_cmd_config</STRONG> (Thumb, 170 bytes, Stack size 344 bytes, usr_atv.o(i.pc_cmd_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = pc_cmd_config &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_command
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>pc_cmd_csq</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_csq))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_csq &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCsq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>pc_cmd_flash</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>pc_cmd_gps</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_atv.o(i.pc_cmd_gps))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = pc_cmd_gps &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>pc_cmd_iccid</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_iccid))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_iccid &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>pc_cmd_imei</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_imei))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_imei &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetImei
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>pc_cmd_log</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pc_cmd_log &rArr; strstr_t &rArr; strncmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_set_debugSwitch
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>pc_cmd_power</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usr_atv.o(i.pc_cmd_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pc_cmd_power &rArr; strstr_t &rArr; strncmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>pc_cmd_server</STRONG> (Thumb, 466 bytes, Stack size 152 bytes, usr_atv.o(i.pc_cmd_server))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = pc_cmd_server &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPort
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkType
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUrl
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetPort
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetLinkType
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetIp
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnUser
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApnPasswd
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetApn
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClrIp
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearUrl
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip_address
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStringPartEx
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetItemCount
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>pc_cmd_sim</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_sim))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_sim &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetCcid
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>pc_cmd_sn</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = pc_cmd_sn &rArr; sys_saveSN &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTermSN
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermSN
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>pc_cmd_stat</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_stat &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_GetGpsStarNum
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>pc_cmd_swver</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usr_atv.o(i.pc_cmd_swver))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = pc_cmd_swver &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>pc_cmd_tcp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usr_atv.o(i.pc_cmd_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = pc_cmd_tcp &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>pc_cmd_vin</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, usr_atv.o(i.pc_cmd_vin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pc_cmd_vin &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_atv.o(.data)
</UL>
<P><STRONG><a name="[44a]"></a>pmu_to_deepsleepmode</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, gd32f4xx_pmu.o(i.pmu_to_deepsleepmode))
<BR><BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_suspend
</UL>

<P><STRONG><a name="[34e]"></a>pow_my</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usr_public.o(i.pow_my))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pow_my
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
</UL>

<P><STRONG><a name="[1d0]"></a>print1</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bsp_uart.o(i.print1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = print1 &rArr; uart1_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_send
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sendCmd
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_sendCmd
</UL>

<P><STRONG><a name="[349]"></a>print2</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bsp_uart.o(i.print2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = print2 &rArr; uart2_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
</UL>

<P><STRONG><a name="[34b]"></a>printx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usr_public.o(i.printx))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = printx &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
</UL>

<P><STRONG><a name="[1fb]"></a>pvPortMalloc</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckbackupApp
</UL>

<P><STRONG><a name="[45a]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[45d]"></a>pxPortInitialiseStack</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[1e9]"></a>queue_init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, usr_dev.o(i.queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = queue_init &rArr; RingBuffer_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[3fa]"></a>rcu_all_reset_flag_clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_all_reset_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[42e]"></a>rcu_ck48m_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_ck48m_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[41d]"></a>rcu_clock_freq_get</STRONG> (Thumb, 264 bytes, Stack size 84 bytes, gd32f4xx_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[3b7]"></a>rcu_flag_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[2e8]"></a>rcu_osci_on</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_osci_on))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
</UL>

<P><STRONG><a name="[2e9]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 342 bytes, Stack size 20 bytes, gd32f4xx_rcu.o(i.rcu_osci_stab_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
</UL>

<P><STRONG><a name="[1bb]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_gpio_config
</UL>

<P><STRONG><a name="[40a]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[409]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[42d]"></a>rcu_pll48m_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_pll48m_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[42c]"></a>rcu_pllsai_config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gd32f4xx_rcu.o(i.rcu_pllsai_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_pllsai_config
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[404]"></a>rcu_timer_clock_prescaler_config</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_timer_clock_prescaler_config))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[26d]"></a>rtc_check_time</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usr_public.o(i.rtc_check_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_check_time
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_gpstime
</UL>

<P><STRONG><a name="[156]"></a>rtc_flag_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f4xx_rtc.o(i.rtc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[155]"></a>rtc_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_rtc.o(i.rtc_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[3b8]"></a>rtt_isleap</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usr_gps.o(i.rtt_isleap))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_localtime
</UL>

<P><STRONG><a name="[23b]"></a>rtt_localtime</STRONG> (Thumb, 450 bytes, Stack size 160 bytes, usr_gps.o(i.rtt_localtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = rtt_localtime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_isleap
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_date_utc_to_rtc
</UL>

<P><STRONG><a name="[239]"></a>rtt_mktime</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, usr_gps.o(i.rtt_mktime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtt_mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_date_utc_to_rtc
</UL>

<P><STRONG><a name="[347]"></a>sendchar2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_uart.o(i.sendchar2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sendchar2 &rArr; uart2_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma_send
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendChar
</UL>

<P><STRONG><a name="[1b6]"></a>sendcharusb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usr_usb.o(i.sendcharusb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_data_send1
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printchar
</UL>

<P><STRONG><a name="[3b9]"></a>serial_string_get</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, usbd_enum.o(i.serial_string_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = serial_string_get &rArr; int_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[1f9]"></a>serialoil_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = serialoil_Init &rArr; serialoil_UartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_UartInit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_PowerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_Init
</UL>

<P><STRONG><a name="[3bb]"></a>serialoil_PowerOn</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = serialoil_PowerOn &rArr; gpio_232_powerCtrl &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_232_powerCtrl
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_Init
</UL>

<P><STRONG><a name="[3bc]"></a>serialoil_UartInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = serialoil_UartInit &rArr; uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_Init
</UL>

<P><STRONG><a name="[2a1]"></a>serialoil_enable_urtfun</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_enable_urtfun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = serialoil_enable_urtfun
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUartFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_UartInit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_PowerOn
</UL>

<P><STRONG><a name="[366]"></a>serialoil_get_percent</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_get_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = serialoil_get_percent &rArr; serialoil_enable_urtfun
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUartFunc
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_type
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent_xd
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent_jt
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent_cr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[3bf]"></a>serialoil_get_percent_cr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usr_serialoil.o(i.serialoil_get_percent_cr))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
</UL>

<P><STRONG><a name="[3be]"></a>serialoil_get_percent_jt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usr_serialoil.o(i.serialoil_get_percent_jt))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
</UL>

<P><STRONG><a name="[3c0]"></a>serialoil_get_percent_xd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usr_serialoil.o(i.serialoil_get_percent_xd))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
</UL>

<P><STRONG><a name="[3c1]"></a>serialoil_get_type</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = serialoil_get_type
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetUartFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
</UL>

<P><STRONG><a name="[1fe]"></a>serialoil_handle</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, usr_serialoil.o(i.serialoil_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = serialoil_handle &rArr; serialoil_handle_jt &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
</UL>

<P><STRONG><a name="[3c3]"></a>serialoil_handle_cr</STRONG> (Thumb, 940 bytes, Stack size 40 bytes, usr_serialoil.o(i.serialoil_handle_cr))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = serialoil_handle_cr &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle
</UL>

<P><STRONG><a name="[3c2]"></a>serialoil_handle_jt</STRONG> (Thumb, 1800 bytes, Stack size 40 bytes, usr_serialoil.o(i.serialoil_handle_jt))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = serialoil_handle_jt &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle
</UL>

<P><STRONG><a name="[3c4]"></a>serialoil_handle_xd</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, usr_serialoil.o(i.serialoil_handle_xd))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = serialoil_handle_xd &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumTo16_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle
</UL>

<P><STRONG><a name="[2a2]"></a>serialoil_noinit_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_serialoil.o(i.serialoil_noinit_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = serialoil_noinit_clear &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
</UL>

<P><STRONG><a name="[3d5]"></a>sms_CheckHaveAutor</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usr_sms.o(i.sms_CheckHaveAutor))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[3c7]"></a>sms_CheckSms</STRONG> (Thumb, 418 bytes, Stack size 200 bytes, usr_sms.o(i.sms_CheckSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180 + Unknown Stack Size
<LI>Call Chain = sms_CheckSms &rArr; sms_MsgHandle &rArr; sms_LongMsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatoi
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usc2_ascii
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strReverse
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_Delete
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmDecode7bit
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pdu2Str
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM7bit2ASCII
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dchar2Int
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[3ce]"></a>sms_DelAllSms</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sms.o(i.sms_DelAllSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = sms_DelAllSms &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[3cc]"></a>sms_Delete</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usr_sms.o(i.sms_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = sms_Delete &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[3cf]"></a>sms_LongMsgSend</STRONG> (Thumb, 580 bytes, Stack size 584 bytes, usr_sms.o(i.sms_LongMsgSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 956 + Unknown Stack Size
<LI>Call Chain = sms_LongMsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strReverseF
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmEncode7bit
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2pdu
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCII2GSM7bit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[3cd]"></a>sms_MsgHandle</STRONG> (Thumb, 686 bytes, Stack size 24 bytes, usr_sms.o(i.sms_MsgHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 980 + Unknown Stack Size
<LI>Call Chain = sms_MsgHandle &rArr; sms_LongMsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp_t
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckTerminalPwd
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckHaveAutor
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_space
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[1d8]"></a>sms_MsgSend</STRONG> (Thumb, 442 bytes, Stack size 576 bytes, usr_sms.o(i.sms_MsgSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 948 + Unknown Stack Size
<LI>Call Chain = sms_MsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strReverseF
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmEncode7bit
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2pdu
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCII2GSM7bit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[3d7]"></a>sms_ReadSms</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, usr_sms.o(i.sms_ReadSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212 + Unknown Stack Size
<LI>Call Chain = sms_ReadSms &rArr; sms_RecvSms &rArr; sms_MsgHandle &rArr; sms_LongMsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBuf
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[3d8]"></a>sms_RecvSms</STRONG> (Thumb, 422 bytes, Stack size 200 bytes, usr_sms.o(i.sms_RecvSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180 + Unknown Stack Size
<LI>Call Chain = sms_RecvSms &rArr; sms_MsgHandle &rArr; sms_LongMsgSend &rArr; sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usc2_ascii
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strReverse
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_Delete
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmDecode7bit
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pdu2Str
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM7bit2ASCII
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dchar2Int
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_ReadSms
</UL>

<P><STRONG><a name="[3d3]"></a>sms_SendAtCmd</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, usr_sms.o(i.sms_SendAtCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = sms_SendAtCmd &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendChar
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[38]"></a>sms_cmd_fly</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, usr_sms.o(i.sms_cmd_fly))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = sms_cmd_fly &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetCarVin
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_command
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr_t
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_get_phone
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_sms.o(.data)
</UL>
<P><STRONG><a name="[3d9]"></a>sms_get_phone</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usr_sms.o(i.sms_get_phone))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sms_get_phone &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
</UL>

<P><STRONG><a name="[1d9]"></a>sms_noinit_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usr_sms.o(i.sms_noinit_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sms_noinit_clear &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[3dc]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[1ed]"></a>spi_flash_init</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, bsp_spi.o(i.spi_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spi_flash_init &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[167]"></a>spi_flash_sendbyte</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bsp_spi.o(i.spi_flash_sendbyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_flash_sendbyte
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>

<P><STRONG><a name="[3df]"></a>spi_i2s_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
</UL>

<P><STRONG><a name="[3de]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
</UL>

<P><STRONG><a name="[3dd]"></a>spi_i2s_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_sendbyte
</UL>

<P><STRONG><a name="[3db]"></a>spi_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[1a0]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[3c8]"></a>strReverse</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, usr_sms.o(i.strReverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strReverse
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[3d0]"></a>strReverseF</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, usr_sms.o(i.strReverseF))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strReverseF
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[2e5]"></a>strcat_t</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, usr_stdlib.o(i.strcat_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = strcat_t &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_splice_seg
</UL>

<P><STRONG><a name="[258]"></a>strchr_t</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usr_stdlib.o(i.strchr_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strchr_t
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gpgga
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_at
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetVin
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetCanbaud
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_cmti
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CheckInOut
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[23e]"></a>strcpy_t</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_stdlib.o(i.strcpy_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_log
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_pccmd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_filter_speed
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermId
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetManuId
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_restore_command
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_vin
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_sn
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_phone
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_mileage
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2keepalive
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip1
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_interval
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_id
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_canbaud
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_autoata
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_apn
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallinNo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
</UL>

<P><STRONG><a name="[12b]"></a>strlen_t</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usr_stdlib.o(i.strlen_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTermSN
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIp
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCarVin
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_command
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetItemCount
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_vin
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sim
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_imei
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_iccid
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_pccmd
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sendCmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpDownQ
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_t
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_AtStr
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetFilename
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermType
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTermId
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetManuId
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myatof
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CallPhone
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_version
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_expend_aw_msg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_login_msg
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrlBak
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTerminalPwd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIpBak
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAuthorPhone
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTerminalPwd
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSn
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetId
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_clip
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetImei
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCops
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCcid
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetCallinNo
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckTerminalPwd
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_get_phone
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_fw_check
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[3e0]"></a>strncasecmp_t</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, usr_stdlib.o(i.strncasecmp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = strncasecmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnicmp_t
</UL>

<P><STRONG><a name="[3e1]"></a>strncmp_t</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usr_stdlib.o(i.strncmp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr_t
</UL>

<P><STRONG><a name="[25b]"></a>strncpy_t</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usr_stdlib.o(i.strncpy_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
</UL>

<P><STRONG><a name="[28d]"></a>strnicmp_t</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usr_stdlib.o(i.strnicmp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = strnicmp_t &rArr; strncasecmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_all_pccmd
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[237]"></a>strstr_t</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, usr_stdlib.o(i.strstr_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = strstr_t &rArr; strncmp_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_vin
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_tcp
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_swver
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_stat
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sim
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_power
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_log
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_imei
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_iccid
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_gps
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_flash
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_csq
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_cgreg
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_acc
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_check_head
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2keepalive
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_interval
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_checkppp
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_VersionCheck
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_QinistatCheck
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CsqCheck
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CpsiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CgregCheck
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CcidCheck
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[3c6]"></a>sumTo16_check</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_serialoil.o(i.sumTo16_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sumTo16_check
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
</UL>

<P><STRONG><a name="[3c5]"></a>sum_check</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_serialoil.o(i.sum_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sum_check
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
</UL>

<P><STRONG><a name="[244]"></a>sys_AddMileAge</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usr_sys.o(i.sys_AddMileAge))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
</UL>

<P><STRONG><a name="[3d6]"></a>sys_CheckTerminalPwd</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, usr_sys.o(i.sys_CheckTerminalPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_CheckTerminalPwd &rArr; sys_GetTerminalPwd &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetTerminalPwd
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[3e2]"></a>sys_CheckbackupApp</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, usr_sys.o(i.sys_CheckbackupApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sys_CheckbackupApp &rArr; flash_Read &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
</UL>

<P><STRONG><a name="[3e3]"></a>sys_ClearBlindIndex</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClearBlindIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_ClearBlindIndex &rArr; MsgGsm_BlindOutdex_clear &rArr; flash_blindOutIndex_erase &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindPost_clear
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_clear
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[3e4]"></a>sys_ClearFlash</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClearFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = sys_ClearFlash &rArr; sys_SetDefaultSysParam &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearRuning
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearBlindIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
</UL>

<P><STRONG><a name="[3e5]"></a>sys_ClearRuning</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClearRuning))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClearRuning &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[2a5]"></a>sys_ClearUrl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClearUrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClearUrl &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
</UL>

<P><STRONG><a name="[2ac]"></a>sys_ClearUrlBak</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClearUrlBak))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClearUrlBak &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
</UL>

<P><STRONG><a name="[29a]"></a>sys_ClrAuthorPhone</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClrAuthorPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClrAuthorPhone &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
</UL>

<P><STRONG><a name="[2a6]"></a>sys_ClrIp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClrIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClrIp &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
</UL>

<P><STRONG><a name="[2ad]"></a>sys_ClrIpBak</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ClrIpBak))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_ClrIpBak &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
</UL>

<P><STRONG><a name="[270]"></a>sys_GetAccStateOffInterval</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetAccStateOffInterval))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[26f]"></a>sys_GetAccStateOnInterval</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetAccStateOnInterval))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[28a]"></a>sys_GetAckSwitch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetAckSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[27a]"></a>sys_GetApn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetApn))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
</UL>

<P><STRONG><a name="[278]"></a>sys_GetApnPasswd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetApnPasswd))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
</UL>

<P><STRONG><a name="[279]"></a>sys_GetApnUser</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetApnUser))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
</UL>

<P><STRONG><a name="[2c5]"></a>sys_GetAuthorPhone</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetAuthorPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_GetAuthorPhone &rArr; memset_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_phone
</UL>

<P><STRONG><a name="[309]"></a>sys_GetAutoAnswerTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetAutoAnswerTime))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[304]"></a>sys_GetCallCtrl</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCallCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
</UL>

<P><STRONG><a name="[289]"></a>sys_GetCan1Baud</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCan1Baud))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[288]"></a>sys_GetCan2Baud</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCan2Baud))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[37d]"></a>sys_GetCarColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCarColor))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[1d7]"></a>sys_GetCarVin</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCarVin))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_vin
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_reset
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_reboot
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
</UL>

<P><STRONG><a name="[35b]"></a>sys_GetCityId</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetCityId))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
</UL>

<P><STRONG><a name="[37b]"></a>sys_GetDriveTimeOut</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetDriveTimeOut))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[2e1]"></a>sys_GetGpsState</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, usr_sys.o(i.sys_GetGpsState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_GetGpsState
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_checkAlarm
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_checkCar
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
</UL>

<P><STRONG><a name="[31f]"></a>sys_GetIP2KeepAlive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetIP2KeepAlive))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_disconnect_ip2
</UL>

<P><STRONG><a name="[35f]"></a>sys_GetId1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetId1))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
</UL>

<P><STRONG><a name="[275]"></a>sys_GetId2</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, usr_sys.o(i.sys_GetId2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = sys_GetId2 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[281]"></a>sys_GetIp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetIp))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[27d]"></a>sys_GetIpBak</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetIpBak))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
</UL>

<P><STRONG><a name="[241]"></a>sys_GetLastGpsData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetLastGpsData))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[27f]"></a>sys_GetLinkType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetLinkType))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[27b]"></a>sys_GetLinkTypeBak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetLinkTypeBak))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[35c]"></a>sys_GetManuId</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetManuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_GetManuId &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
</UL>

<P><STRONG><a name="[249]"></a>sys_GetMileAge</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetMileAge))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[379]"></a>sys_GetOverSpeed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetOverSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[37a]"></a>sys_GetOverSpeedTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetOverSpeedTime))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[280]"></a>sys_GetPort</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetPort))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[27c]"></a>sys_GetPortBak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetPortBak))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[35a]"></a>sys_GetProvinceId</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetProvinceId))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
</UL>

<P><STRONG><a name="[28b]"></a>sys_GetRedeem</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetRedeem))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[37c]"></a>sys_GetRestTimeOut</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetRestTimeOut))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
</UL>

<P><STRONG><a name="[26c]"></a>sys_GetSysRTC</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetSysRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sys_GetSysRTC &rArr; RTC_Get_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Time
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetForCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_gpstime
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_day
</UL>

<P><STRONG><a name="[35e]"></a>sys_GetTermId</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetTermId))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_GetTermId &rArr; strlen_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
</UL>

<P><STRONG><a name="[284]"></a>sys_GetTermSN</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetTermSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_GetTermSN &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
</UL>

<P><STRONG><a name="[35d]"></a>sys_GetTermType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetTermType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_GetTermType &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
</UL>

<P><STRONG><a name="[2c4]"></a>sys_GetTerminalPwd</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usr_sys.o(i.sys_GetTerminalPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_GetTerminalPwd &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_password
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckTerminalPwd
</UL>

<P><STRONG><a name="[23a]"></a>sys_GetTimeType</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetTimeType))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_date_utc_to_rtc
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[25c]"></a>sys_GetTimeZone</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetTimeZone))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckRun
</UL>

<P><STRONG><a name="[273]"></a>sys_GetUartFunc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetUartFunc))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_percent
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_enable_urtfun
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckDevice
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_get_type
</UL>

<P><STRONG><a name="[1d6]"></a>sys_GetUpdateFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetUpdateFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
</UL>

<P><STRONG><a name="[282]"></a>sys_GetUrl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetUrl))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_send_param_msg
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
</UL>

<P><STRONG><a name="[27e]"></a>sys_GetUrlBak</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetUrlBak))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
</UL>

<P><STRONG><a name="[243]"></a>sys_GetageNum</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usr_sys.o(i.sys_GetageNum))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_mileage
</UL>

<P><STRONG><a name="[1f0]"></a>sys_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usr_sys.o(i.sys_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = sys_Init &rArr; gps_valid_read &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clear_runFlag
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clear_run
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[3ec]"></a>sys_ReadUpdate_Flag</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usr_sys.o(i.sys_ReadUpdate_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_ReadUpdate_Flag &rArr; flash_Write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUpdateFlag
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialnum_noinit
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_noinit_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[2c6]"></a>sys_ResetFacitory</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usr_sys.o(i.sys_ResetFacitory))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = sys_ResetFacitory &rArr; sys_ClearFlash &rArr; sys_SetDefaultSysParam &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_reset
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[2b6]"></a>sys_Restart</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, usr_sys.o(i.sys_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_Restart &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_terminal_ctrl
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_post_scheduling
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
</UL>

<P><STRONG><a name="[294]"></a>sys_SetAccStateOffInterval</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetAccStateOffInterval))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_sleep_time
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[293]"></a>sys_SetAccStateOnInterval</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetAccStateOnInterval))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[2be]"></a>sys_SetAckSwitch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetAckSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ack
</UL>

<P><STRONG><a name="[296]"></a>sys_SetApn</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetApn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetApn &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[298]"></a>sys_SetApnPasswd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetApnPasswd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetApnPasswd &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[297]"></a>sys_SetApnUser</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetApnUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetApnUser &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetApn
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[29b]"></a>sys_SetAuthorPhone</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetAuthorPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetAuthorPhone &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAuthorPhone
</UL>

<P><STRONG><a name="[290]"></a>sys_SetAutoAnswerTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetAutoAnswerTime))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetATAParam
</UL>

<P><STRONG><a name="[3f3]"></a>sys_SetCallCtrl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetCallCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[29d]"></a>sys_SetCan1Baud</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetCan1Baud))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetCanbaud
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[29e]"></a>sys_SetCan2Baud</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetCan2Baud))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetCanbaud
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[392]"></a>sys_SetCarColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetCarColor))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carColor
</UL>

<P><STRONG><a name="[2b3]"></a>sys_SetCarVin</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetCarVin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetCarVin &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_vin
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetVin
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetId
</UL>

<P><STRONG><a name="[394]"></a>sys_SetCityId</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetCityId))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
</UL>

<P><STRONG><a name="[3e6]"></a>sys_SetDefaultParam</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usr_sys.o(i.sys_SetDefaultParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = sys_SetDefaultParam &rArr; sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetWatchType
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetRedeem
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDistanceInterval
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOnInterval
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetAccStateOffInterval
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTerminalPwd
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetSleepAble
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCallCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[3e7]"></a>sys_SetDefaultSysParam</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetDefaultSysParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = sys_SetDefaultSysParam &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUrl
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPort
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkType
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnUser
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApnPasswd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetApn
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUartFunc
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTimeZone
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetTimeType
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetPortBak
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetLinkTypeBak
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetIpBak
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCan2Baud
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetCan1Baud
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetId
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>

<P><STRONG><a name="[397]"></a>sys_SetDistanceInterval</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetDistanceInterval))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[390]"></a>sys_SetDriveTimeOut</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetDriveTimeOut))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
</UL>

<P><STRONG><a name="[2c1]"></a>sys_SetIP2KeepAlive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetIP2KeepAlive))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_ip2keepalive
</UL>

<P><STRONG><a name="[3f5]"></a>sys_SetId</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetId))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2a7]"></a>sys_SetIp</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetIp &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
</UL>

<P><STRONG><a name="[2ae]"></a>sys_SetIpBak</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetIpBak))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetIpBak &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[25e]"></a>sys_SetLastGpsData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_sys.o(i.sys_SetLastGpsData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_SetLastGpsData &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[2aa]"></a>sys_SetLinkType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetLinkType))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2b1]"></a>sys_SetLinkTypeBak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetLinkTypeBak))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[248]"></a>sys_SetMileAge</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetMileAge))
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carMillage
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
</UL>

<P><STRONG><a name="[395]"></a>sys_SetMoveDistance</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetMoveDistance))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_move_radius
</UL>

<P><STRONG><a name="[38e]"></a>sys_SetOverSpeed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetOverSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
</UL>

<P><STRONG><a name="[38f]"></a>sys_SetOverSpeedTime</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetOverSpeedTime))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
</UL>

<P><STRONG><a name="[2a9]"></a>sys_SetPort</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetPort))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2b0]"></a>sys_SetPortBak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetPortBak))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[393]"></a>sys_SetProvinceId</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetProvinceId))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
</UL>

<P><STRONG><a name="[396]"></a>sys_SetRedeem</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetRedeem))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_redeem
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[391]"></a>sys_SetRestTimeOut</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetRestTimeOut))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
</UL>

<P><STRONG><a name="[3f4]"></a>sys_SetSleepAble</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetSleepAble))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[25d]"></a>sys_SetSysRTC</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usr_sys.o(i.sys_SetSysRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_SetSysRTC &rArr; RTC_Set_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_get_gpsloc
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
</UL>

<P><STRONG><a name="[2b8]"></a>sys_SetTermSN</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetTermSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetTermSN &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSn
</UL>

<P><STRONG><a name="[2c3]"></a>sys_SetTerminalPwd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetTerminalPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetTerminalPwd &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_password
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[3f6]"></a>sys_SetTimeType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetTimeType))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[3f7]"></a>sys_SetTimeZone</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetTimeZone))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2a0]"></a>sys_SetUartFunc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetUartFunc))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetDevice
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[185]"></a>sys_SetUpdateFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetUpdateFlag))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otaResultReport
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
</UL>

<P><STRONG><a name="[2a8]"></a>sys_SetUrl</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetUrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetUrl &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_server
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP1
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2af]"></a>sys_SetUrlBak</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usr_sys.o(i.sys_SetUrlBak))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_SetUrlBak &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetIP2
</UL>

<P><STRONG><a name="[292]"></a>sys_SetWatchType</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetWatchType))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_sleep_time
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_report_watch
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetAccOnOffInterval
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[2b5]"></a>sys_SetageNum</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SetageNum))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetMileage
</UL>

<P><STRONG><a name="[173]"></a>sys_SoftReset</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usr_sys.o(i.sys_SoftReset))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_day
</UL>

<P><STRONG><a name="[3f8]"></a>sys_auto_backupApp</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, usr_sys.o(i.sys_auto_backupApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_auto_backupApp &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckbackupApp
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
</UL>

<P><STRONG><a name="[3f9]"></a>sys_backupApp_to_ExtFlash</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usr_sys.o(i.sys_backupApp_to_ExtFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sys_backupApp_to_ExtFlash &rArr; flash_fota_write &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_write
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_backup_erase
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
</UL>

<P><STRONG><a name="[3ea]"></a>sys_check_rst</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, usr_sys.o(i.sys_check_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_check_rst &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUpdateFlag
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialnum_noinit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_noinit_clear
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_all_reset_flag_clear
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_noinit_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[378]"></a>sys_clear_alarm</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_clear_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_ack_deal
</UL>

<P><STRONG><a name="[24d]"></a>sys_clear_lastGpsA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_clear_lastGpsA))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
</UL>

<P><STRONG><a name="[3f0]"></a>sys_clear_run</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, usr_sys.o(i.sys_clear_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_clear_run &rArr; sys_noinit_state
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_noinit_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[3eb]"></a>sys_clear_runFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usr_sys.o(i.sys_clear_runFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[3fc]"></a>sys_fw_check</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usr_sys.o(i.sys_fw_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_fw_check &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp_t
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
</UL>

<P><STRONG><a name="[13a]"></a>sys_get_debugSwitch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_get_debugSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PrintVersion
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[3f1]"></a>sys_noinit_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_noinit_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ReadUpdate_Flag
</UL>

<P><STRONG><a name="[3fb]"></a>sys_noinit_state</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_noinit_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_noinit_state
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clear_run
</UL>

<P><STRONG><a name="[400]"></a>sys_param_crc16</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, usr_sys.o(i.sys_param_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_param_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
</UL>

<P><STRONG><a name="[3ef]"></a>sys_readRuning</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usr_sys.o(i.sys_readRuning))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_readRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[3ee]"></a>sys_readSN</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usr_sys.o(i.sys_readSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_readSN &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[3ed]"></a>sys_readSys</STRONG> (Thumb, 474 bytes, Stack size 16 bytes, usr_sys.o(i.sys_readSys))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = sys_readSys &rArr; sys_ClearFlash &rArr; sys_SetDefaultSysParam &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_read_data
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_param_crc16
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_fw_check
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ClearFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Init
</UL>

<P><STRONG><a name="[18d]"></a>sys_reset_day</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_sys.o(i.sys_reset_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sys_reset_day &rArr; sys_GetSysRTC &rArr; RTC_Get_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SoftReset
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetSysRTC
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IRQHandlerCB
</UL>

<P><STRONG><a name="[188]"></a>sys_saveRuning</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, usr_sys.o(i.sys_saveRuning))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_saveRuning &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_param_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_sleep_time
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_report_watch
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_redeem
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_move_radius
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultParam
</UL>

<P><STRONG><a name="[2c7]"></a>sys_saveSN</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usr_sys.o(i.sys_saveSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_saveSN &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_sn
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_sn
</UL>

<P><STRONG><a name="[28e]"></a>sys_saveSys</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usr_sys.o(i.sys_saveSys))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_write_data
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_param_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_config
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ConfigSet
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carLicence
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carColor
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_apn
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_addr
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_cmd_fly
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetDefaultSysParam
</UL>

<P><STRONG><a name="[2c2]"></a>sys_set_debugSwitch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_set_debugSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_log
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_other
</UL>

<P><STRONG><a name="[222]"></a>sys_state_acc9</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, usr_sys.o(i.sys_state_acc9))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_state_acc9 &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[3e8]"></a>sys_state_checkAlarm</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_checkAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetGpsState
</UL>

<P><STRONG><a name="[3e9]"></a>sys_state_checkCar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_checkCar))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_GetGpsState
</UL>

<P><STRONG><a name="[224]"></a>sys_state_di19</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_di19))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_di19
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[225]"></a>sys_state_di29</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_di29))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_di29
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newAlarm
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[226]"></a>sys_state_di39</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_di39))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_di39
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[227]"></a>sys_state_do19</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_do19))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_do19
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[228]"></a>sys_state_do29</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_do29))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_do29
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[229]"></a>sys_state_do39</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usr_sys.o(i.sys_state_do39))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sys_state_do39
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[268]"></a>sys_state_get_acc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_acc))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_acc
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[361]"></a>sys_state_get_alarm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[362]"></a>sys_state_get_car</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_car))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
</UL>

<P><STRONG><a name="[242]"></a>sys_state_get_gpslastloc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_gpslastloc))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[220]"></a>sys_state_get_gpsloc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_gpsloc))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_stat
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cmd_gps
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_gpsLed_proc
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetSysRTC
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[267]"></a>sys_state_get_power</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_get_power))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_update_location_condition
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParamAll
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_CheckParam
</UL>

<P><STRONG><a name="[24b]"></a>sys_state_gpsloc</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, usr_sys.o(i.sys_state_gpsloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_state_gpsloc &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
</UL>

<P><STRONG><a name="[261]"></a>sys_state_lastGpsA</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_lastGpsA))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
</UL>

<P><STRONG><a name="[24c]"></a>sys_state_newAlarm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_newAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di29
</UL>

<P><STRONG><a name="[3fe]"></a>sys_state_newCar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_newCar))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_noinit_state
</UL>

<P><STRONG><a name="[3fd]"></a>sys_state_newCar9</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_newCar9))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do39
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do29
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do19
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di39
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di29
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di19
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_noinit_state
</UL>

<P><STRONG><a name="[260]"></a>sys_state_offAlarm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_offAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
</UL>

<P><STRONG><a name="[402]"></a>sys_state_offCar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_offCar))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
</UL>

<P><STRONG><a name="[401]"></a>sys_state_offCar9</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usr_sys.o(i.sys_state_offCar9))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do39
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do29
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_do19
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di39
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di29
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_di19
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
</UL>

<P><STRONG><a name="[223]"></a>sys_state_sos9</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, usr_sys.o(i.sys_state_sos9))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = sys_state_sos9 &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newAlarm
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_offCar9
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_newCar9
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
</UL>

<P><STRONG><a name="[1ee]"></a>timer1_init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bsp_timer.o(i.timer1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = timer1_init &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_timer_clock_prescaler_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[405]"></a>timer_deinit</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gd32f4xx_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[408]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[406]"></a>timer_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[407]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[179]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[178]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[40b]"></a>uart1_dma</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, bsp_uart.o(i.uart1_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart1_dma &rArr; dma_single_data_mode_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_para_struct_init
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_mode_init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_subperipheral_select
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[39c]"></a>uart1_dma_send</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_uart.o(i.uart1_dma_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart1_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print1
</UL>

<P><STRONG><a name="[266]"></a>uart1_init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, bsp_uart.o(i.uart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uartInit
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_UartInit
</UL>

<P><STRONG><a name="[418]"></a>uart2_dma</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, bsp_uart.o(i.uart2_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart2_dma &rArr; dma_single_data_mode_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_para_struct_init
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_mode_init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_subperipheral_select
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[39d]"></a>uart2_dma_send</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_uart.o(i.uart2_dma_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart2_dma_send &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar2
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print2
</UL>

<P><STRONG><a name="[34d]"></a>uart2_init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, bsp_uart.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uart2_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_uartInit
</UL>

<P><STRONG><a name="[419]"></a>uart4_dma</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, bsp_uart.o(i.uart4_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart4_dma &rArr; dma_single_data_mode_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_para_struct_init
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_single_data_mode_init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_subperipheral_select
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[3bd]"></a>uart4_init</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, bsp_uart.o(i.uart4_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uart4_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_UartInit
</UL>

<P><STRONG><a name="[2d7]"></a>uint16_to_uint8</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usr_public.o(i.uint16_to_uint8))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_request_time_msg
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_login_msg
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_ter_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_rollCall
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_register_msg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_general_ack
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_append_Ext
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_TLV_AWExt
</UL>

<P><STRONG><a name="[133]"></a>uint32_to_uint8</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_public.o(i.uint32_to_uint8))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_pid
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_save
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_check
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_append_Ext
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_create_TLV_AWExt
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_save
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_save
</UL>

<P><STRONG><a name="[2db]"></a>uint8_to_uint16</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_public.o(i.uint8_to_uint16))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint32
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_move_radius
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carID
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_general_ack_deal
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_get_ext_TLV
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
</UL>

<P><STRONG><a name="[130]"></a>uint8_to_uint32</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usr_public.o(i.uint8_to_uint32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint8_to_uint32
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_to_uint16
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_watInt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_sleep_time
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_report_watch
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_redeem
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_port
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_phoneLim
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_carMillage
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_para_set_alarm
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_get_TLV
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindOutdex_read
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_BlindIndex_read
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_read
</UL>

<P><STRONG><a name="[17e]"></a>update_ClearFileReq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usr_fota.o(i.update_ClearFileReq))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
</UL>

<P><STRONG><a name="[2cc]"></a>update_GetFilename</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetFilename))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
</UL>

<P><STRONG><a name="[2ce]"></a>update_GetIp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetIp))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
</UL>

<P><STRONG><a name="[39a]"></a>update_GetLastState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetLastState))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
</UL>

<P><STRONG><a name="[2cd]"></a>update_GetPort</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetPort))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
</UL>

<P><STRONG><a name="[41c]"></a>update_GetTFTPFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetTFTPFlag))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
</UL>

<P><STRONG><a name="[41a]"></a>update_GetUpdateFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_fota.o(i.update_GetUpdateFlag))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_handle
</UL>

<P><STRONG><a name="[34c]"></a>update_Reconnect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usr_fota.o(i.update_Reconnect))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
</UL>

<P><STRONG><a name="[2bc]"></a>update_SetFilename</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usr_fota.o(i.update_SetFilename))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_SetFilename &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen_t
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
</UL>

<P><STRONG><a name="[2ba]"></a>update_SetIp</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usr_fota.o(i.update_SetIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_SetIp &rArr; memcpy_t
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_t
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
</UL>

<P><STRONG><a name="[2bb]"></a>update_SetPort</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usr_fota.o(i.update_SetPort))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetUpgrade
</UL>

<P><STRONG><a name="[17f]"></a>update_SetTFTPFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usr_fota.o(i.update_SetTFTPFlag))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
</UL>

<P><STRONG><a name="[2ca]"></a>update_SetUpdateFlag</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usr_fota.o(i.update_SetUpdateFlag))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_trac_rev_update_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
</UL>

<P><STRONG><a name="[36a]"></a>update_handle</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, usr_fota.o(i.update_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = update_handle &rArr; TftpTarsk &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetUpdateFlag
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
</UL>

<P><STRONG><a name="[41b]"></a>update_linkTFTP</STRONG> (Thumb, 688 bytes, Stack size 152 bytes, usr_fota.o(i.update_linkTFTP))
<BR><BR>[Stack]<UL><LI>Max Depth = 740 + Unknown Stack Size
<LI>Call Chain = update_linkTFTP &rArr; TftpDownQ &rArr; modem_send_gprsData &rArr; modem_gsm_disconnect_ip1 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SetUpdateFlag
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetTFTPFlag
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetPort
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetIp
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_GetFilename
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpDownQ
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_SetTFTPFlag
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
</UL>

<P><STRONG><a name="[414]"></a>usart_baudrate_set</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, gd32f4xx_usart.o(i.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[413]"></a>usart_deinit</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, gd32f4xx_usart.o(i.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[410]"></a>usart_dma_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_usart.o(i.usart_dma_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[40f]"></a>usart_dma_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_usart.o(i.usart_dma_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[417]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[411]"></a>usart_interrupt_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gd32f4xx_usart.o(i.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_dma
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_dma
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma
</UL>

<P><STRONG><a name="[18e]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gd32f4xx_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[415]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_usart.o(i.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[416]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_usart.o(i.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[41e]"></a>usb_basic_init</STRONG> (Thumb, 238 bytes, Stack size 208 bytes, drv_usb_core.o(i.usb_basic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = usb_basic_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[41f]"></a>usb_core_init</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, drv_usb_core.o(i.usb_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usb_core_init &rArr; usb_core_reset &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_reset
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[435]"></a>usb_ctlep_startout</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_usb_dev.o(i.usb_ctlep_startout))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epout
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epin
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_send
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_recev
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>

<P><STRONG><a name="[440]"></a>usb_curmode_set</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, drv_usb_core.o(i.usb_curmode_set))
<BR><BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[423]"></a>usb_devcore_init</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, drv_usb_dev.o(i.usb_devcore_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usb_devcore_init &rArr; usb_txfifo_flush &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devint_enable
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_flush
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_txfifo
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rxfifo_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[427]"></a>usb_devint_enable</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, drv_usb_dev.o(i.usb_devint_enable))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[428]"></a>usb_gpio_config</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.usb_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usb_gpio_config &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[442]"></a>usb_iepintr_read</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, drv_usb_dev.o(i.usb_iepintr_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usb_iepintr_read
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epin
</UL>

<P><STRONG><a name="[2ec]"></a>usb_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usr_usb.o(i.usb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = usb_init &rArr; usbd_init &rArr; usb_basic_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_Init
</UL>

<P><STRONG><a name="[42b]"></a>usb_intr_config</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.usb_intr_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usb_intr_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[421]"></a>usb_mdelay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.usb_mdelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_mdelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_DELAY_uS
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_disconnect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
</UL>

<P><STRONG><a name="[429]"></a>usb_rcu_config</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.usb_rcu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_rcu_config &rArr; rcu_pllsai_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_pllsai_config
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_pll48m_clock_config
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ck48m_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[1f8]"></a>usb_recv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usr_usb.o(i.usb_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = usb_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessageFromISR
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_out
</UL>

<P><STRONG><a name="[426]"></a>usb_rxfifo_flush</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_usb_core.o(i.usb_rxfifo_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usb_rxfifo_flush &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[448]"></a>usb_rxfifo_read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, drv_usb_core.o(i.usb_rxfifo_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_rxfifo_read
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_rxfifo
</UL>

<P><STRONG><a name="[424]"></a>usb_set_txfifo</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, drv_usb_core.o(i.usb_set_txfifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_set_txfifo
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[43c]"></a>usb_transc_active</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, drv_usb_dev.o(i.usb_transc_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_transc_active
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_setup
</UL>

<P><STRONG><a name="[43e]"></a>usb_transc_clrstall</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, drv_usb_dev.o(i.usb_transc_clrstall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_transc_clrstall
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall_clear
</UL>

<P><STRONG><a name="[43a]"></a>usb_transc_deactivate</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, drv_usb_dev.o(i.usb_transc_deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usb_transc_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear
</UL>

<P><STRONG><a name="[42f]"></a>usb_transc_inxfer</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, drv_usb_dev.o(i.usb_transc_inxfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>

<P><STRONG><a name="[43b]"></a>usb_transc_outxfer</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, drv_usb_dev.o(i.usb_transc_outxfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_transc_outxfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>

<P><STRONG><a name="[43d]"></a>usb_transc_stall</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, drv_usb_dev.o(i.usb_transc_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_transc_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>

<P><STRONG><a name="[425]"></a>usb_txfifo_flush</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_usb_core.o(i.usb_txfifo_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_txfifo_flush &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[430]"></a>usb_txfifo_write</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, drv_usb_core.o(i.usb_txfifo_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_txfifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_emptytxfifo_write
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_inxfer
</UL>

<P><STRONG><a name="[422]"></a>usb_udelay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gd32f4xx_hw.o(i.usb_udelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_DELAY_uS
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_flush
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rxfifo_flush
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_reset
</UL>

<P><STRONG><a name="[44d]"></a>usbd_class_request</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbd_enum.o(i.usbd_class_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_class_request
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
</UL>

<P><STRONG><a name="[431]"></a>usbd_connect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbd_connect &rArr; usb_mdelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[432]"></a>usbd_ctl_recev</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbd_transc.o(i.usbd_ctl_recev))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usbd_ctl_recev &rArr; usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_out_transc
</UL>

<P><STRONG><a name="[433]"></a>usbd_ctl_send</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbd_transc.o(i.usbd_ctl_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transc
</UL>

<P><STRONG><a name="[434]"></a>usbd_ctl_status_recev</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_transc.o(i.usbd_ctl_status_recev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_ctl_status_recev &rArr; usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transc
</UL>

<P><STRONG><a name="[436]"></a>usbd_ctl_status_send</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_transc.o(i.usbd_ctl_status_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = usbd_ctl_status_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_out_transc
</UL>

<P><STRONG><a name="[437]"></a>usbd_disconnect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbd_disconnect &rArr; usb_mdelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[439]"></a>usbd_enum_error</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbd_enum.o(i.usbd_enum_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_enum_error &rArr; usbd_ep_stall &rArr; usb_transc_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
</UL>

<P><STRONG><a name="[1f5]"></a>usbd_ep_clear</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_ep_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbd_ep_clear &rArr; usb_transc_deactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_deinit
</UL>

<P><STRONG><a name="[1f7]"></a>usbd_ep_recev</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_ep_recev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_outxfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_ctlx_out
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_out
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_init
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_recev
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_recev
</UL>

<P><STRONG><a name="[1f4]"></a>usbd_ep_send</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_ep_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_inxfer
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_in
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_send
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_send
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_data_send1
</UL>

<P><STRONG><a name="[1f6]"></a>usbd_ep_setup</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_ep_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_ep_setup &rArr; usb_transc_active
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_active
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_init
</UL>

<P><STRONG><a name="[1b9]"></a>usbd_ep_stall</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_ep_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_stall &rArr; usb_transc_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_std_setfeature
</UL>

<P><STRONG><a name="[1b7]"></a>usbd_ep_stall_clear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_ep_stall_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_stall_clear &rArr; usb_transc_clrstall
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_clrstall
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_std_clearfeature
</UL>

<P><STRONG><a name="[43f]"></a>usbd_in_transc</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, usbd_transc.o(i.usbd_in_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = usbd_in_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_recev
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_send
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epin
</UL>

<P><STRONG><a name="[42a]"></a>usbd_init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = usbd_init &rArr; usb_basic_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_curmode_set
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_disconnect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[195]"></a>usbd_isr</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, drv_usbd_int.o(i.usbd_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = usbd_isr &rArr; usbd_int_epout &rArr; usbd_setup_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_suspend
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_rxfifo
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_reset
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epout
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epin
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_enumfinish
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFS_IRQHandler
</UL>

<P><STRONG><a name="[444]"></a>usbd_out_transc</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, usbd_transc.o(i.usbd_out_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = usbd_out_transc &rArr; usbd_ctl_status_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_send
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_recev
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epout
</UL>

<P><STRONG><a name="[445]"></a>usbd_setup_transc</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usbd_transc.o(i.usbd_setup_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = usbd_setup_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_status_send
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_send
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctl_recev
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_vendor_request
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_request
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epout
</UL>

<P><STRONG><a name="[44c]"></a>usbd_standard_request</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbd_enum.o(i.usbd_standard_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_standard_request
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
</UL>

<P><STRONG><a name="[44e]"></a>usbd_vendor_request</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_enum.o(i.usbd_vendor_request))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
</UL>

<P><STRONG><a name="[3cb]"></a>usc2_ascii</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, usr_public.o(i.usc2_ascii))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usc2_ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_RecvSms
</UL>

<P><STRONG><a name="[3a4]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[172]"></a>uxTaskGetStackHighWaterMark</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, tasks.o(i.uxTaskGetStackHighWaterMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uxTaskGetStackHighWaterMark
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskCheckFreeStackSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_heap_command
</UL>

<P><STRONG><a name="[3a9]"></a>vApplicationIdleHook</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usr_hook.o(i.vApplicationIdleHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = vApplicationIdleHook &rArr; sys_auto_backupApp &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[3b5]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usr_hook.o(i.vApplicationMallocFailedHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vApplicationMallocFailedHook
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[450]"></a>vApplicationTickHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usr_hook.o(i.vApplicationTickHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = vApplicationTickHook &rArr; SoftWdtISR &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[b5]"></a>vDevTask</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, usr_dev.o(i.vDevTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = vDevTask &rArr; dev_com_recv_proc &rArr; handset_SetSchedul &rArr; handset_ConfigSet &rArr; sys_saveSys &rArr; fmc_write_data &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetStackHighWaterMark
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_power_proc
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[2f2]"></a>vDevTaskQueueCreat</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usr_dev.o(i.vDevTaskQueueCreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = vDevTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[451]"></a>vGetStackHighWaterMark</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usr_app.o(i.vGetStackHighWaterMark))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
</UL>

<P><STRONG><a name="[b4]"></a>vGpsTask</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, usr_gps.o(i.vGpsTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1068<LI>Call Chain = vGpsTask &rArr; gps_watch_proc &rArr; gps_watch_gpstime &rArr; aw_send_location_msg &rArr; oa_serialize_location_history &rArr; oa_JT_serialize_gps &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_t
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetStackHighWaterMark
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_zkw_proc
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_watch_proc
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOn
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_powerOff
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_AlarmHandle
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[2f1]"></a>vGpsTaskQueueCreat</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usr_gps.o(i.vGpsTaskQueueCreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = vGpsTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>vGsmTask</STRONG> (Thumb, 574 bytes, Stack size 24 bytes, usr_gsm.o(i.vGsmTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772 + Unknown Stack Size
<LI>Call Chain = vGsmTask &rArr; ipv_recv_Handle &rArr; ipv_send_txt_ack &rArr; modem_send_gprsData2 &rArr; modem_gsm_disconnect_ip2 &rArr; modem_send_Atcmd &rArr; modem_seek_AtAck &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetStackHighWaterMark
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Stop
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_SetState
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center2
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_GetState
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_ReadSms
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_DelAllSms
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_CheckSms
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_logout
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_disconnect
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_HandUpClear
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_AnwserPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[2f0]"></a>vGsmTaskQueueCreat</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usr_gsm.o(i.vGsmTaskQueueCreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = vGsmTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ad]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[3ab]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
</UL>

<P><STRONG><a name="[39f]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[454]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[b2]"></a>vMainTask</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, usr_app.o(i.vMainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = vMainTask &rArr; aw_send_rfid_msg &rArr; aw_serialize_rfid &rArr; oa_JT_serialize_gpsrfid &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortGetFreeHeapSize
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_reconnect_ip2
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip2
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_reconnect_ip1
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_handle
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aw_send_rfid_msg
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetStackHighWaterMark
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_Start
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMessage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PrintVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[2ef]"></a>vMainTaskQueueCreat</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usr_app.o(i.vMainTaskQueueCreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = vMainTaskQueueCreat &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_debugSwitch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31c]"></a>vPortEnterCritical</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[31d]"></a>vPortExitCritical</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_clear_flagCnt
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[1ff]"></a>vPortFree</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_backupApp_to_ExtFlash
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_CheckbackupApp
</UL>

<P><STRONG><a name="[457]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[151]"></a>vTaskDelayUntil</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, tasks.o(i.vTaskDelayUntil))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskDelayUntil &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
</UL>

<P><STRONG><a name="[3b2]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[453]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[455]"></a>vTaskPriorityInherit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[45b]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
</UL>

<P><STRONG><a name="[2f6]"></a>vTaskStartScheduler</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a2]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ResetFacitory
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[f0]"></a>vTaskSwitchContext</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[171]"></a>xPortGetFreeHeapSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heap_4.o(i.xPortGetFreeHeapSize))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_heap_command
</UL>

<P><STRONG><a name="[456]"></a>xPortStartScheduler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[2f3]"></a>xQueueCreateMutex</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f4]"></a>xQueueGenericCreate</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13b]"></a>xQueueGenericReceive</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_GetMessage
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PrintVersion
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_write
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_read
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_write
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_read
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_write
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_erase
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_backup_erase
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_read
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindOutIndex_erase
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_write
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_read
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindInIndex_erase
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendChar
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[2c9]"></a>xQueueGenericReset</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_cmd_upgrade
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_ota_waiting
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
</UL>

<P><STRONG><a name="[13d]"></a>xQueueGenericSend</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSys
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveSN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_saveRuning
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv_proc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessage
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTaskQueueCreat
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTaskQueueCreat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGsmTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTaskQueueCreat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGpsTask
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTaskQueueCreat
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDevTask
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PrintVersion
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_gpsloc
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_time_token
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_parse_gprmc
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_nmea_date_token
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_module_errCheck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_sos9
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_state_acc9
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_linkTFTP
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_write
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_read
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mileage_erase
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_write
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_read
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_gpsvalid_erase
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_write
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_erase
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fota_backup_erase
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blinddata_read
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindOutIndex_erase
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_write
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindIndex_read
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_blindInIndex_erase
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_Read
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handset_SetSchedul
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_Atcmd
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendStr
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_seek_AtAck
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData2
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ipvip
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login2
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipvagps_Recv_Handle
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_serialize_location
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_recv_Handle
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_cal_timing_ack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_ack
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Restart
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_gprsData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_send_disconnect
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_InputMsg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_recv_Handle
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_check_login
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_SaveFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_ReadFlash
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_valid_read
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_auto_backupApp
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWdtISR
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_Clear
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgGsm_OutputMsg
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiurc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_qiopen
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_netopen
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_ipd
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_urc_cipopen
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_sendChar
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_response
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_paramJudge
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ppp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_ip
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_init
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_cgreg
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_center
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_gsm_Login
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ImeiCheck
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_CopsCheck
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_ClccCheck
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_SendAtCmd
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgSend
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_MsgHandle
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_LongMsgSend
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_xd
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_jt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialoil_handle_cr
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSys
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readSN
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_readRuning
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_rst
</UL>

<P><STRONG><a name="[14e]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Timer_ISR
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SendMessageFromISR
</UL>

<P><STRONG><a name="[45c]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2f5]"></a>xTaskGenericCreate</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, tasks.o(i.xTaskGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[150]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDelayMs
</UL>

<P><STRONG><a name="[176]"></a>xTaskIncrementTick</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = xTaskIncrementTick &rArr; vApplicationTickHook &rArr; SoftWdtISR &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationTickHook
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3a8]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[3b1]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[3a3]"></a>xTaskResumeAll</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[2e6]"></a>xor_check</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_public.o(i.xor_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xor_check
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_splice_seg
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_query_filter_msg
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_general_msg
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_deal_msg
</UL>

<P><STRONG><a name="[e4]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[b1]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[1a2]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[4ae]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[4af]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[4b0]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[4b1]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[4b2]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[199]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_MakePoint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[460]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[464]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[46a]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[19d]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_MakePoint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[466]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1b1]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[467]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[233]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Calc_Place
</UL>

<P><STRONG><a name="[468]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1ab]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_MakePoint
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[4b3]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[1b2]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[4b4]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[4b5]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[469]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[46d]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[198]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_mileage_calc
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gpsrfid
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oa_JT_serialize_gps
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_MakePoint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Calc_Place
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[46b]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[463]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[462]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1ac]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[46c]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[19f]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[46e]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[1b0]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_Distance
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[470]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2d5]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipv_latlon_to_double
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_lat_or_lon_to_double
</UL>

<P><STRONG><a name="[471]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[472]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[df]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[4b6]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[4b7]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[c1]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[c5]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[465]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[1ad]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[473]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1fc]"></a>RingBuffer_GetCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_dev.o(i.RingBuffer_GetCount))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_com_recv_proc
</UL>

<P><STRONG><a name="[180]"></a>CRC_calc</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usr_fota.o(i.CRC_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TftpTarsk
</UL>

<P><STRONG><a name="[323]"></a>RingBuffer_GetCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_gsm.o(i.RingBuffer_GetCount))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_recv
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_getAtBufLen
</UL>

<P><STRONG><a name="[153]"></a>_print</STRONG> (Thumb, 368 bytes, Stack size 56 bytes, usr_printf_stdarg.o(i._print))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_prints
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printi
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>

<P><STRONG><a name="[1b5]"></a>_printchar</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, usr_printf_stdarg.o(i._printchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendcharusb
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_prints
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printi
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_print
</UL>

<P><STRONG><a name="[1b4]"></a>_printi</STRONG> (Thumb, 194 bytes, Stack size 72 bytes, usr_printf_stdarg.o(i._printi))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_prints
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_print
</UL>

<P><STRONG><a name="[1b3]"></a>_prints</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, usr_printf_stdarg.o(i._prints))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printi
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_print
</UL>

<P><STRONG><a name="[161]"></a>RingBuffer_GetCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usr_ring_buffer.o(i.RingBuffer_GetCount))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_IsFull
</UL>

<P><STRONG><a name="[164]"></a>RingBuffer_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usr_ring_buffer.o(i.RingBuffer_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_PopMult
</UL>

<P><STRONG><a name="[160]"></a>RingBuffer_IsFull</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_ring_buffer.o(i.RingBuffer_IsFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RingBuffer_IsFull
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_GetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuffer_InsertMult
</UL>

<P><STRONG><a name="[420]"></a>usb_core_reset</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_usb_core.o(i.usb_core_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usb_core_reset &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
</UL>

<P><STRONG><a name="[438]"></a>usbd_emptytxfifo_write</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, drv_usbd_int.o(i.usbd_emptytxfifo_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_emptytxfifo_write &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_int_epin
</UL>

<P><STRONG><a name="[44b]"></a>usbd_int_enumfinish</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, drv_usbd_int.o(i.usbd_int_enumfinish))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[441]"></a>usbd_int_epin</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, drv_usbd_int.o(i.usbd_int_epin))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = usbd_int_epin &rArr; usbd_in_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transc
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_emptytxfifo_write
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_iepintr_read
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[443]"></a>usbd_int_epout</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, drv_usbd_int.o(i.usbd_int_epout))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = usbd_int_epout &rArr; usbd_setup_transc &rArr; usbd_ctl_send &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_out_transc
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[446]"></a>usbd_int_reset</STRONG> (Thumb, 208 bytes, Stack size 72 bytes, drv_usbd_int.o(i.usbd_int_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = usbd_int_reset &rArr; usb_txfifo_flush &rArr; usb_udelay &rArr; DWT_DELAY_uS
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_active
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctlep_startout
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_flush
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[447]"></a>usbd_int_rxfifo</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, drv_usbd_int.o(i.usbd_int_rxfifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_int_rxfifo &rArr; usb_rxfifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rxfifo_read
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[449]"></a>usbd_int_suspend</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, drv_usbd_int.o(i.usbd_int_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_int_suspend
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_to_deepsleepmode
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[1b8]"></a>_usb_bos_desc_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_bos_desc_get))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_std_getdescriptor
</UL>

<P><STRONG><a name="[46]"></a>_usb_config_desc_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_config_desc_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>_usb_dev_desc_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_dev_desc_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>_usb_std_clearfeature</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_clearfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _usb_std_clearfeature &rArr; usbd_ep_stall_clear &rArr; usb_transc_clrstall
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>_usb_std_getconfiguration</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_getconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_getconfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>_usb_std_getdescriptor</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, usbd_enum.o(i._usb_std_getdescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _usb_std_getdescriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_bos_desc_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>_usb_std_getinterface</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_getinterface))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>_usb_std_getstatus</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_getstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_getstatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>_usb_std_reserved</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_reserved))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>_usb_std_setaddress</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_setaddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_setaddress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>_usb_std_setconfiguration</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_setconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_setconfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>_usb_std_setdescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_setdescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>_usb_std_setfeature</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_setfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _usb_std_setfeature &rArr; usbd_ep_stall &rArr; usb_transc_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>_usb_std_setinterface</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_setinterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_setinterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>_usb_std_synchframe</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_synchframe))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>_usb_str_desc_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_str_desc_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_str_desc_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>cdc_acm_deinit</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_acm_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cdc_acm_deinit &rArr; usbd_ep_clear &rArr; usb_transc_deactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>cdc_acm_in</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, cdc_acm_core.o(i.cdc_acm_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = cdc_acm_in &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>cdc_acm_init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, cdc_acm_core.o(i.cdc_acm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = cdc_acm_init &rArr; usbd_ep_setup &rArr; usb_transc_active
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_setup
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>cdc_acm_out</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_acm_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = cdc_acm_out &rArr; usb_recv &rArr; OS_SendMessageFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>cdc_acm_req</STRONG> (Thumb, 176 bytes, Stack size 12 bytes, cdc_acm_core.o(i.cdc_acm_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cdc_acm_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>cdc_ctlx_out</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_ctlx_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = cdc_ctlx_out &rArr; usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cdc_acm_core.o(.data)
</UL>
<P><STRONG><a name="[3a6]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[3a7]"></a>prvCopyDataToQueue</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[3ae]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[3af]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[3b0]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[39e]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[3a0]"></a>prvAllocateTCBAndStack</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, tasks.o(i.prvAllocateTCBAndStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[3a1]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[3a5]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr;  xTaskIncrementTick (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[b7]"></a>prvIdleTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = prvIdleTask &rArr; vApplicationIdleHook &rArr; sys_auto_backupApp &rArr; PRINTF &rArr; _print &rArr; _printi &rArr; _prints &rArr; _printchar &rArr; sendcharusb &rArr; cdc_acm_data_send1 &rArr; usbd_ep_send &rArr; usb_transc_inxfer &rArr; usb_txfifo_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[3aa]"></a>prvInitialiseTCBVariables</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, tasks.o(i.prvInitialiseTCBVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInitialiseTCBVariables
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[3ac]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[45e]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[44f]"></a>prvTaskCheckFreeStackSpace</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(i.prvTaskCheckFreeStackSpace))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
</UL>

<P><STRONG><a name="[3b3]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[3b4]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[b6]"></a>prvTaskExitError</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[403]"></a>system_clock_168m_8m_hxtal</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, system_gd32f4xx.o(i.system_clock_168m_8m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[177]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_168m_8m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[46f]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[461]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ae]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
